// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resources/GameInformation.proto

package buffers.resources;

public final class GameInformationOuterClass {
  private GameInformationOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GameInformationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:buffers.resources.GameInformation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 background_color = 1;</code>
     */
    boolean hasBackgroundColor();
    /**
     * <code>optional int32 background_color = 1;</code>
     */
    int getBackgroundColor();

    /**
     * <code>optional bool embed_game_window = 2;</code>
     */
    boolean hasEmbedGameWindow();
    /**
     * <code>optional bool embed_game_window = 2;</code>
     */
    boolean getEmbedGameWindow();

    /**
     * <code>optional string form_caption = 3;</code>
     */
    boolean hasFormCaption();
    /**
     * <code>optional string form_caption = 3;</code>
     */
    java.lang.String getFormCaption();
    /**
     * <code>optional string form_caption = 3;</code>
     */
    com.google.protobuf.ByteString
        getFormCaptionBytes();

    /**
     * <code>optional int32 left = 4;</code>
     */
    boolean hasLeft();
    /**
     * <code>optional int32 left = 4;</code>
     */
    int getLeft();

    /**
     * <code>optional int32 top = 5;</code>
     */
    boolean hasTop();
    /**
     * <code>optional int32 top = 5;</code>
     */
    int getTop();

    /**
     * <code>optional int32 right = 6;</code>
     */
    boolean hasRight();
    /**
     * <code>optional int32 right = 6;</code>
     */
    int getRight();

    /**
     * <code>optional int32 bottom = 7;</code>
     */
    boolean hasBottom();
    /**
     * <code>optional int32 bottom = 7;</code>
     */
    int getBottom();

    /**
     * <code>optional bool show_border = 8;</code>
     */
    boolean hasShowBorder();
    /**
     * <code>optional bool show_border = 8;</code>
     */
    boolean getShowBorder();

    /**
     * <code>optional bool allow_resize = 9;</code>
     */
    boolean hasAllowResize();
    /**
     * <code>optional bool allow_resize = 9;</code>
     */
    boolean getAllowResize();

    /**
     * <code>optional bool stay_on_top = 10;</code>
     */
    boolean hasStayOnTop();
    /**
     * <code>optional bool stay_on_top = 10;</code>
     */
    boolean getStayOnTop();

    /**
     * <code>optional bool pause_game = 11;</code>
     */
    boolean hasPauseGame();
    /**
     * <code>optional bool pause_game = 11;</code>
     */
    boolean getPauseGame();

    /**
     * <code>optional string text = 12;</code>
     */
    boolean hasText();
    /**
     * <code>optional string text = 12;</code>
     */
    java.lang.String getText();
    /**
     * <code>optional string text = 12;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();
  }
  /**
   * Protobuf type {@code buffers.resources.GameInformation}
   */
  public  static final class GameInformation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:buffers.resources.GameInformation)
      GameInformationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GameInformation.newBuilder() to construct.
    private GameInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GameInformation() {
      backgroundColor_ = 0;
      embedGameWindow_ = false;
      formCaption_ = "";
      left_ = 0;
      top_ = 0;
      right_ = 0;
      bottom_ = 0;
      showBorder_ = false;
      allowResize_ = false;
      stayOnTop_ = false;
      pauseGame_ = false;
      text_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GameInformation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              backgroundColor_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              embedGameWindow_ = input.readBool();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              formCaption_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              left_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              top_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              right_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              bottom_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              showBorder_ = input.readBool();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              allowResize_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              stayOnTop_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              pauseGame_ = input.readBool();
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              text_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffers.resources.GameInformationOuterClass.internal_static_buffers_resources_GameInformation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffers.resources.GameInformationOuterClass.internal_static_buffers_resources_GameInformation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              buffers.resources.GameInformationOuterClass.GameInformation.class, buffers.resources.GameInformationOuterClass.GameInformation.Builder.class);
    }

    private int bitField0_;
    public static final int BACKGROUND_COLOR_FIELD_NUMBER = 1;
    private int backgroundColor_;
    /**
     * <code>optional int32 background_color = 1;</code>
     */
    public boolean hasBackgroundColor() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 background_color = 1;</code>
     */
    public int getBackgroundColor() {
      return backgroundColor_;
    }

    public static final int EMBED_GAME_WINDOW_FIELD_NUMBER = 2;
    private boolean embedGameWindow_;
    /**
     * <code>optional bool embed_game_window = 2;</code>
     */
    public boolean hasEmbedGameWindow() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool embed_game_window = 2;</code>
     */
    public boolean getEmbedGameWindow() {
      return embedGameWindow_;
    }

    public static final int FORM_CAPTION_FIELD_NUMBER = 3;
    private volatile java.lang.Object formCaption_;
    /**
     * <code>optional string form_caption = 3;</code>
     */
    public boolean hasFormCaption() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string form_caption = 3;</code>
     */
    public java.lang.String getFormCaption() {
      java.lang.Object ref = formCaption_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          formCaption_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string form_caption = 3;</code>
     */
    public com.google.protobuf.ByteString
        getFormCaptionBytes() {
      java.lang.Object ref = formCaption_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        formCaption_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LEFT_FIELD_NUMBER = 4;
    private int left_;
    /**
     * <code>optional int32 left = 4;</code>
     */
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 left = 4;</code>
     */
    public int getLeft() {
      return left_;
    }

    public static final int TOP_FIELD_NUMBER = 5;
    private int top_;
    /**
     * <code>optional int32 top = 5;</code>
     */
    public boolean hasTop() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 top = 5;</code>
     */
    public int getTop() {
      return top_;
    }

    public static final int RIGHT_FIELD_NUMBER = 6;
    private int right_;
    /**
     * <code>optional int32 right = 6;</code>
     */
    public boolean hasRight() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 right = 6;</code>
     */
    public int getRight() {
      return right_;
    }

    public static final int BOTTOM_FIELD_NUMBER = 7;
    private int bottom_;
    /**
     * <code>optional int32 bottom = 7;</code>
     */
    public boolean hasBottom() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 bottom = 7;</code>
     */
    public int getBottom() {
      return bottom_;
    }

    public static final int SHOW_BORDER_FIELD_NUMBER = 8;
    private boolean showBorder_;
    /**
     * <code>optional bool show_border = 8;</code>
     */
    public boolean hasShowBorder() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool show_border = 8;</code>
     */
    public boolean getShowBorder() {
      return showBorder_;
    }

    public static final int ALLOW_RESIZE_FIELD_NUMBER = 9;
    private boolean allowResize_;
    /**
     * <code>optional bool allow_resize = 9;</code>
     */
    public boolean hasAllowResize() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool allow_resize = 9;</code>
     */
    public boolean getAllowResize() {
      return allowResize_;
    }

    public static final int STAY_ON_TOP_FIELD_NUMBER = 10;
    private boolean stayOnTop_;
    /**
     * <code>optional bool stay_on_top = 10;</code>
     */
    public boolean hasStayOnTop() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool stay_on_top = 10;</code>
     */
    public boolean getStayOnTop() {
      return stayOnTop_;
    }

    public static final int PAUSE_GAME_FIELD_NUMBER = 11;
    private boolean pauseGame_;
    /**
     * <code>optional bool pause_game = 11;</code>
     */
    public boolean hasPauseGame() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional bool pause_game = 11;</code>
     */
    public boolean getPauseGame() {
      return pauseGame_;
    }

    public static final int TEXT_FIELD_NUMBER = 12;
    private volatile java.lang.Object text_;
    /**
     * <code>optional string text = 12;</code>
     */
    public boolean hasText() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string text = 12;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string text = 12;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, backgroundColor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, embedGameWindow_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, formCaption_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, left_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, top_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, right_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, bottom_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(8, showBorder_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(9, allowResize_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(10, stayOnTop_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBool(11, pauseGame_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 12, text_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, backgroundColor_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, embedGameWindow_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, formCaption_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, left_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, top_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, right_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, bottom_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, showBorder_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, allowResize_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, stayOnTop_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, pauseGame_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, text_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof buffers.resources.GameInformationOuterClass.GameInformation)) {
        return super.equals(obj);
      }
      buffers.resources.GameInformationOuterClass.GameInformation other = (buffers.resources.GameInformationOuterClass.GameInformation) obj;

      boolean result = true;
      result = result && (hasBackgroundColor() == other.hasBackgroundColor());
      if (hasBackgroundColor()) {
        result = result && (getBackgroundColor()
            == other.getBackgroundColor());
      }
      result = result && (hasEmbedGameWindow() == other.hasEmbedGameWindow());
      if (hasEmbedGameWindow()) {
        result = result && (getEmbedGameWindow()
            == other.getEmbedGameWindow());
      }
      result = result && (hasFormCaption() == other.hasFormCaption());
      if (hasFormCaption()) {
        result = result && getFormCaption()
            .equals(other.getFormCaption());
      }
      result = result && (hasLeft() == other.hasLeft());
      if (hasLeft()) {
        result = result && (getLeft()
            == other.getLeft());
      }
      result = result && (hasTop() == other.hasTop());
      if (hasTop()) {
        result = result && (getTop()
            == other.getTop());
      }
      result = result && (hasRight() == other.hasRight());
      if (hasRight()) {
        result = result && (getRight()
            == other.getRight());
      }
      result = result && (hasBottom() == other.hasBottom());
      if (hasBottom()) {
        result = result && (getBottom()
            == other.getBottom());
      }
      result = result && (hasShowBorder() == other.hasShowBorder());
      if (hasShowBorder()) {
        result = result && (getShowBorder()
            == other.getShowBorder());
      }
      result = result && (hasAllowResize() == other.hasAllowResize());
      if (hasAllowResize()) {
        result = result && (getAllowResize()
            == other.getAllowResize());
      }
      result = result && (hasStayOnTop() == other.hasStayOnTop());
      if (hasStayOnTop()) {
        result = result && (getStayOnTop()
            == other.getStayOnTop());
      }
      result = result && (hasPauseGame() == other.hasPauseGame());
      if (hasPauseGame()) {
        result = result && (getPauseGame()
            == other.getPauseGame());
      }
      result = result && (hasText() == other.hasText());
      if (hasText()) {
        result = result && getText()
            .equals(other.getText());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBackgroundColor()) {
        hash = (37 * hash) + BACKGROUND_COLOR_FIELD_NUMBER;
        hash = (53 * hash) + getBackgroundColor();
      }
      if (hasEmbedGameWindow()) {
        hash = (37 * hash) + EMBED_GAME_WINDOW_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getEmbedGameWindow());
      }
      if (hasFormCaption()) {
        hash = (37 * hash) + FORM_CAPTION_FIELD_NUMBER;
        hash = (53 * hash) + getFormCaption().hashCode();
      }
      if (hasLeft()) {
        hash = (37 * hash) + LEFT_FIELD_NUMBER;
        hash = (53 * hash) + getLeft();
      }
      if (hasTop()) {
        hash = (37 * hash) + TOP_FIELD_NUMBER;
        hash = (53 * hash) + getTop();
      }
      if (hasRight()) {
        hash = (37 * hash) + RIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getRight();
      }
      if (hasBottom()) {
        hash = (37 * hash) + BOTTOM_FIELD_NUMBER;
        hash = (53 * hash) + getBottom();
      }
      if (hasShowBorder()) {
        hash = (37 * hash) + SHOW_BORDER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getShowBorder());
      }
      if (hasAllowResize()) {
        hash = (37 * hash) + ALLOW_RESIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAllowResize());
      }
      if (hasStayOnTop()) {
        hash = (37 * hash) + STAY_ON_TOP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getStayOnTop());
      }
      if (hasPauseGame()) {
        hash = (37 * hash) + PAUSE_GAME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPauseGame());
      }
      if (hasText()) {
        hash = (37 * hash) + TEXT_FIELD_NUMBER;
        hash = (53 * hash) + getText().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static buffers.resources.GameInformationOuterClass.GameInformation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static buffers.resources.GameInformationOuterClass.GameInformation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static buffers.resources.GameInformationOuterClass.GameInformation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static buffers.resources.GameInformationOuterClass.GameInformation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static buffers.resources.GameInformationOuterClass.GameInformation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static buffers.resources.GameInformationOuterClass.GameInformation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static buffers.resources.GameInformationOuterClass.GameInformation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static buffers.resources.GameInformationOuterClass.GameInformation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static buffers.resources.GameInformationOuterClass.GameInformation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static buffers.resources.GameInformationOuterClass.GameInformation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static buffers.resources.GameInformationOuterClass.GameInformation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static buffers.resources.GameInformationOuterClass.GameInformation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(buffers.resources.GameInformationOuterClass.GameInformation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code buffers.resources.GameInformation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:buffers.resources.GameInformation)
        buffers.resources.GameInformationOuterClass.GameInformationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffers.resources.GameInformationOuterClass.internal_static_buffers_resources_GameInformation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffers.resources.GameInformationOuterClass.internal_static_buffers_resources_GameInformation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                buffers.resources.GameInformationOuterClass.GameInformation.class, buffers.resources.GameInformationOuterClass.GameInformation.Builder.class);
      }

      // Construct using buffers.resources.GameInformationOuterClass.GameInformation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        backgroundColor_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        embedGameWindow_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        formCaption_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        left_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        top_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        right_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        bottom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        showBorder_ = false;
        bitField0_ = (bitField0_ & ~0x00000080);
        allowResize_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        stayOnTop_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        pauseGame_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        text_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffers.resources.GameInformationOuterClass.internal_static_buffers_resources_GameInformation_descriptor;
      }

      public buffers.resources.GameInformationOuterClass.GameInformation getDefaultInstanceForType() {
        return buffers.resources.GameInformationOuterClass.GameInformation.getDefaultInstance();
      }

      public buffers.resources.GameInformationOuterClass.GameInformation build() {
        buffers.resources.GameInformationOuterClass.GameInformation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public buffers.resources.GameInformationOuterClass.GameInformation buildPartial() {
        buffers.resources.GameInformationOuterClass.GameInformation result = new buffers.resources.GameInformationOuterClass.GameInformation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.backgroundColor_ = backgroundColor_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.embedGameWindow_ = embedGameWindow_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.formCaption_ = formCaption_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.left_ = left_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.top_ = top_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.right_ = right_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.bottom_ = bottom_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.showBorder_ = showBorder_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.allowResize_ = allowResize_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.stayOnTop_ = stayOnTop_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.pauseGame_ = pauseGame_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.text_ = text_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffers.resources.GameInformationOuterClass.GameInformation) {
          return mergeFrom((buffers.resources.GameInformationOuterClass.GameInformation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(buffers.resources.GameInformationOuterClass.GameInformation other) {
        if (other == buffers.resources.GameInformationOuterClass.GameInformation.getDefaultInstance()) return this;
        if (other.hasBackgroundColor()) {
          setBackgroundColor(other.getBackgroundColor());
        }
        if (other.hasEmbedGameWindow()) {
          setEmbedGameWindow(other.getEmbedGameWindow());
        }
        if (other.hasFormCaption()) {
          bitField0_ |= 0x00000004;
          formCaption_ = other.formCaption_;
          onChanged();
        }
        if (other.hasLeft()) {
          setLeft(other.getLeft());
        }
        if (other.hasTop()) {
          setTop(other.getTop());
        }
        if (other.hasRight()) {
          setRight(other.getRight());
        }
        if (other.hasBottom()) {
          setBottom(other.getBottom());
        }
        if (other.hasShowBorder()) {
          setShowBorder(other.getShowBorder());
        }
        if (other.hasAllowResize()) {
          setAllowResize(other.getAllowResize());
        }
        if (other.hasStayOnTop()) {
          setStayOnTop(other.getStayOnTop());
        }
        if (other.hasPauseGame()) {
          setPauseGame(other.getPauseGame());
        }
        if (other.hasText()) {
          bitField0_ |= 0x00000800;
          text_ = other.text_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        buffers.resources.GameInformationOuterClass.GameInformation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (buffers.resources.GameInformationOuterClass.GameInformation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int backgroundColor_ ;
      /**
       * <code>optional int32 background_color = 1;</code>
       */
      public boolean hasBackgroundColor() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 background_color = 1;</code>
       */
      public int getBackgroundColor() {
        return backgroundColor_;
      }
      /**
       * <code>optional int32 background_color = 1;</code>
       */
      public Builder setBackgroundColor(int value) {
        bitField0_ |= 0x00000001;
        backgroundColor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 background_color = 1;</code>
       */
      public Builder clearBackgroundColor() {
        bitField0_ = (bitField0_ & ~0x00000001);
        backgroundColor_ = 0;
        onChanged();
        return this;
      }

      private boolean embedGameWindow_ ;
      /**
       * <code>optional bool embed_game_window = 2;</code>
       */
      public boolean hasEmbedGameWindow() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool embed_game_window = 2;</code>
       */
      public boolean getEmbedGameWindow() {
        return embedGameWindow_;
      }
      /**
       * <code>optional bool embed_game_window = 2;</code>
       */
      public Builder setEmbedGameWindow(boolean value) {
        bitField0_ |= 0x00000002;
        embedGameWindow_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool embed_game_window = 2;</code>
       */
      public Builder clearEmbedGameWindow() {
        bitField0_ = (bitField0_ & ~0x00000002);
        embedGameWindow_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object formCaption_ = "";
      /**
       * <code>optional string form_caption = 3;</code>
       */
      public boolean hasFormCaption() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string form_caption = 3;</code>
       */
      public java.lang.String getFormCaption() {
        java.lang.Object ref = formCaption_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            formCaption_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string form_caption = 3;</code>
       */
      public com.google.protobuf.ByteString
          getFormCaptionBytes() {
        java.lang.Object ref = formCaption_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          formCaption_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string form_caption = 3;</code>
       */
      public Builder setFormCaption(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        formCaption_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string form_caption = 3;</code>
       */
      public Builder clearFormCaption() {
        bitField0_ = (bitField0_ & ~0x00000004);
        formCaption_ = getDefaultInstance().getFormCaption();
        onChanged();
        return this;
      }
      /**
       * <code>optional string form_caption = 3;</code>
       */
      public Builder setFormCaptionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        formCaption_ = value;
        onChanged();
        return this;
      }

      private int left_ ;
      /**
       * <code>optional int32 left = 4;</code>
       */
      public boolean hasLeft() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 left = 4;</code>
       */
      public int getLeft() {
        return left_;
      }
      /**
       * <code>optional int32 left = 4;</code>
       */
      public Builder setLeft(int value) {
        bitField0_ |= 0x00000008;
        left_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 left = 4;</code>
       */
      public Builder clearLeft() {
        bitField0_ = (bitField0_ & ~0x00000008);
        left_ = 0;
        onChanged();
        return this;
      }

      private int top_ ;
      /**
       * <code>optional int32 top = 5;</code>
       */
      public boolean hasTop() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 top = 5;</code>
       */
      public int getTop() {
        return top_;
      }
      /**
       * <code>optional int32 top = 5;</code>
       */
      public Builder setTop(int value) {
        bitField0_ |= 0x00000010;
        top_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 top = 5;</code>
       */
      public Builder clearTop() {
        bitField0_ = (bitField0_ & ~0x00000010);
        top_ = 0;
        onChanged();
        return this;
      }

      private int right_ ;
      /**
       * <code>optional int32 right = 6;</code>
       */
      public boolean hasRight() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 right = 6;</code>
       */
      public int getRight() {
        return right_;
      }
      /**
       * <code>optional int32 right = 6;</code>
       */
      public Builder setRight(int value) {
        bitField0_ |= 0x00000020;
        right_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 right = 6;</code>
       */
      public Builder clearRight() {
        bitField0_ = (bitField0_ & ~0x00000020);
        right_ = 0;
        onChanged();
        return this;
      }

      private int bottom_ ;
      /**
       * <code>optional int32 bottom = 7;</code>
       */
      public boolean hasBottom() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 bottom = 7;</code>
       */
      public int getBottom() {
        return bottom_;
      }
      /**
       * <code>optional int32 bottom = 7;</code>
       */
      public Builder setBottom(int value) {
        bitField0_ |= 0x00000040;
        bottom_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bottom = 7;</code>
       */
      public Builder clearBottom() {
        bitField0_ = (bitField0_ & ~0x00000040);
        bottom_ = 0;
        onChanged();
        return this;
      }

      private boolean showBorder_ ;
      /**
       * <code>optional bool show_border = 8;</code>
       */
      public boolean hasShowBorder() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool show_border = 8;</code>
       */
      public boolean getShowBorder() {
        return showBorder_;
      }
      /**
       * <code>optional bool show_border = 8;</code>
       */
      public Builder setShowBorder(boolean value) {
        bitField0_ |= 0x00000080;
        showBorder_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool show_border = 8;</code>
       */
      public Builder clearShowBorder() {
        bitField0_ = (bitField0_ & ~0x00000080);
        showBorder_ = false;
        onChanged();
        return this;
      }

      private boolean allowResize_ ;
      /**
       * <code>optional bool allow_resize = 9;</code>
       */
      public boolean hasAllowResize() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool allow_resize = 9;</code>
       */
      public boolean getAllowResize() {
        return allowResize_;
      }
      /**
       * <code>optional bool allow_resize = 9;</code>
       */
      public Builder setAllowResize(boolean value) {
        bitField0_ |= 0x00000100;
        allowResize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool allow_resize = 9;</code>
       */
      public Builder clearAllowResize() {
        bitField0_ = (bitField0_ & ~0x00000100);
        allowResize_ = false;
        onChanged();
        return this;
      }

      private boolean stayOnTop_ ;
      /**
       * <code>optional bool stay_on_top = 10;</code>
       */
      public boolean hasStayOnTop() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool stay_on_top = 10;</code>
       */
      public boolean getStayOnTop() {
        return stayOnTop_;
      }
      /**
       * <code>optional bool stay_on_top = 10;</code>
       */
      public Builder setStayOnTop(boolean value) {
        bitField0_ |= 0x00000200;
        stayOnTop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool stay_on_top = 10;</code>
       */
      public Builder clearStayOnTop() {
        bitField0_ = (bitField0_ & ~0x00000200);
        stayOnTop_ = false;
        onChanged();
        return this;
      }

      private boolean pauseGame_ ;
      /**
       * <code>optional bool pause_game = 11;</code>
       */
      public boolean hasPauseGame() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool pause_game = 11;</code>
       */
      public boolean getPauseGame() {
        return pauseGame_;
      }
      /**
       * <code>optional bool pause_game = 11;</code>
       */
      public Builder setPauseGame(boolean value) {
        bitField0_ |= 0x00000400;
        pauseGame_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool pause_game = 11;</code>
       */
      public Builder clearPauseGame() {
        bitField0_ = (bitField0_ & ~0x00000400);
        pauseGame_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object text_ = "";
      /**
       * <code>optional string text = 12;</code>
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string text = 12;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string text = 12;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string text = 12;</code>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 12;</code>
       */
      public Builder clearText() {
        bitField0_ = (bitField0_ & ~0x00000800);
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 12;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        text_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:buffers.resources.GameInformation)
    }

    // @@protoc_insertion_point(class_scope:buffers.resources.GameInformation)
    private static final buffers.resources.GameInformationOuterClass.GameInformation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new buffers.resources.GameInformationOuterClass.GameInformation();
    }

    public static buffers.resources.GameInformationOuterClass.GameInformation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GameInformation>
        PARSER = new com.google.protobuf.AbstractParser<GameInformation>() {
      public GameInformation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GameInformation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GameInformation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GameInformation> getParserForType() {
      return PARSER;
    }

    public buffers.resources.GameInformationOuterClass.GameInformation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buffers_resources_GameInformation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buffers_resources_GameInformation_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037resources/GameInformation.proto\022\021buffe" +
      "rs.resources\032\roptions.proto\"\370\001\n\017GameInfo" +
      "rmation\022\030\n\020background_color\030\001 \001(\005\022\031\n\021emb" +
      "ed_game_window\030\002 \001(\010\022\024\n\014form_caption\030\003 \001" +
      "(\t\022\014\n\004left\030\004 \001(\005\022\013\n\003top\030\005 \001(\005\022\r\n\005right\030\006" +
      " \001(\005\022\016\n\006bottom\030\007 \001(\005\022\023\n\013show_border\030\010 \001(" +
      "\010\022\024\n\014allow_resize\030\t \001(\010\022\023\n\013stay_on_top\030\n" +
      " \001(\010\022\022\n\npause_game\030\013 \001(\010\022\014\n\004text\030\014 \001(\t"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          buffers.Options.getDescriptor(),
        }, assigner);
    internal_static_buffers_resources_GameInformation_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_buffers_resources_GameInformation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buffers_resources_GameInformation_descriptor,
        new java.lang.String[] { "BackgroundColor", "EmbedGameWindow", "FormCaption", "Left", "Top", "Right", "Bottom", "ShowBorder", "AllowResize", "StayOnTop", "PauseGame", "Text", });
    buffers.Options.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
