// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resources/Background.proto

package buffers.resources;

public final class BackgroundOuterClass {
  private BackgroundOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BackgroundOrBuilder extends
      // @@protoc_insertion_point(interface_extends:buffers.resources.Background)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    int getId();

    /**
     * <code>optional bool preload = 4 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    boolean hasPreload();
    /**
     * <code>optional bool preload = 4 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    boolean getPreload();

    /**
     * <code>optional bool transparent = 5 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    boolean hasTransparent();
    /**
     * <code>optional bool transparent = 5 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    boolean getTransparent();

    /**
     * <code>optional bool smooth_edges = 6 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    boolean hasSmoothEdges();
    /**
     * <code>optional bool smooth_edges = 6 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    boolean getSmoothEdges();

    /**
     * <code>optional bool use_as_tileset = 7 [(.buffers.gmx) = "istileset"];</code>
     */
    boolean hasUseAsTileset();
    /**
     * <code>optional bool use_as_tileset = 7 [(.buffers.gmx) = "istileset"];</code>
     */
    boolean getUseAsTileset();

    /**
     * <code>optional int32 tile_width = 11 [(.buffers.gmx) = "tilewidth"];</code>
     */
    boolean hasTileWidth();
    /**
     * <code>optional int32 tile_width = 11 [(.buffers.gmx) = "tilewidth"];</code>
     */
    int getTileWidth();

    /**
     * <code>optional int32 tile_height = 12 [(.buffers.gmx) = "tileheight"];</code>
     */
    boolean hasTileHeight();
    /**
     * <code>optional int32 tile_height = 12 [(.buffers.gmx) = "tileheight"];</code>
     */
    int getTileHeight();

    /**
     * <code>optional int32 horizontal_offset = 13 [(.buffers.gmx) = "tilexoff"];</code>
     */
    boolean hasHorizontalOffset();
    /**
     * <code>optional int32 horizontal_offset = 13 [(.buffers.gmx) = "tilexoff"];</code>
     */
    int getHorizontalOffset();

    /**
     * <code>optional int32 vertical_offset = 14 [(.buffers.gmx) = "tileyoff"];</code>
     */
    boolean hasVerticalOffset();
    /**
     * <code>optional int32 vertical_offset = 14 [(.buffers.gmx) = "tileyoff"];</code>
     */
    int getVerticalOffset();

    /**
     * <code>optional int32 horizontal_spacing = 15 [(.buffers.gmx) = "tilehsep"];</code>
     */
    boolean hasHorizontalSpacing();
    /**
     * <code>optional int32 horizontal_spacing = 15 [(.buffers.gmx) = "tilehsep"];</code>
     */
    int getHorizontalSpacing();

    /**
     * <code>optional int32 vertical_spacing = 16 [(.buffers.gmx) = "tilevsep"];</code>
     */
    boolean hasVerticalSpacing();
    /**
     * <code>optional int32 vertical_spacing = 16 [(.buffers.gmx) = "tilevsep"];</code>
     */
    int getVerticalSpacing();

    /**
     * <code>optional int32 h_tile = 17 [(.buffers.gmx) = "HTile"];</code>
     */
    boolean hasHTile();
    /**
     * <code>optional int32 h_tile = 17 [(.buffers.gmx) = "HTile"];</code>
     */
    int getHTile();

    /**
     * <code>optional int32 v_tile = 18 [(.buffers.gmx) = "VTile"];</code>
     */
    boolean hasVTile();
    /**
     * <code>optional int32 v_tile = 18 [(.buffers.gmx) = "VTile"];</code>
     */
    int getVTile();

    /**
     * <code>optional int32 texture_group = 19 [(.buffers.gmx) = "TextureGroups/TextureGroup0"];</code>
     */
    boolean hasTextureGroup();
    /**
     * <code>optional int32 texture_group = 19 [(.buffers.gmx) = "TextureGroups/TextureGroup0"];</code>
     */
    int getTextureGroup();

    /**
     * <code>optional bool for3D = 20 [(.buffers.gmx) = "For3D"];</code>
     */
    boolean hasFor3D();
    /**
     * <code>optional bool for3D = 20 [(.buffers.gmx) = "For3D"];</code>
     */
    boolean getFor3D();

    /**
     * <code>optional uint32 width = 21;</code>
     */
    boolean hasWidth();
    /**
     * <code>optional uint32 width = 21;</code>
     */
    int getWidth();

    /**
     * <code>optional uint32 height = 22;</code>
     */
    boolean hasHeight();
    /**
     * <code>optional uint32 height = 22;</code>
     */
    int getHeight();

    /**
     * <code>optional string image = 3 [(.buffers.gmx) = "data", (.buffers.file_path) = true];</code>
     */
    boolean hasImage();
    /**
     * <code>optional string image = 3 [(.buffers.gmx) = "data", (.buffers.file_path) = true];</code>
     */
    java.lang.String getImage();
    /**
     * <code>optional string image = 3 [(.buffers.gmx) = "data", (.buffers.file_path) = true];</code>
     */
    com.google.protobuf.ByteString
        getImageBytes();
  }
  /**
   * Protobuf type {@code buffers.resources.Background}
   */
  public  static final class Background extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:buffers.resources.Background)
      BackgroundOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Background.newBuilder() to construct.
    private Background(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Background() {
      name_ = "";
      id_ = 0;
      preload_ = false;
      transparent_ = false;
      smoothEdges_ = false;
      useAsTileset_ = false;
      tileWidth_ = 0;
      tileHeight_ = 0;
      horizontalOffset_ = 0;
      verticalOffset_ = 0;
      horizontalSpacing_ = 0;
      verticalSpacing_ = 0;
      hTile_ = 0;
      vTile_ = 0;
      textureGroup_ = 0;
      for3D_ = false;
      width_ = 0;
      height_ = 0;
      image_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Background(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00040000;
              image_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              preload_ = input.readBool();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              transparent_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              smoothEdges_ = input.readBool();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              useAsTileset_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000040;
              tileWidth_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              tileHeight_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000100;
              horizontalOffset_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000200;
              verticalOffset_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000400;
              horizontalSpacing_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000800;
              verticalSpacing_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00001000;
              hTile_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00002000;
              vTile_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00004000;
              textureGroup_ = input.readInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00008000;
              for3D_ = input.readBool();
              break;
            }
            case 168: {
              bitField0_ |= 0x00010000;
              width_ = input.readUInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00020000;
              height_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffers.resources.BackgroundOuterClass.internal_static_buffers_resources_Background_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffers.resources.BackgroundOuterClass.internal_static_buffers_resources_Background_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              buffers.resources.BackgroundOuterClass.Background.class, buffers.resources.BackgroundOuterClass.Background.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    public int getId() {
      return id_;
    }

    public static final int PRELOAD_FIELD_NUMBER = 4;
    private boolean preload_;
    /**
     * <code>optional bool preload = 4 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    public boolean hasPreload() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool preload = 4 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    public boolean getPreload() {
      return preload_;
    }

    public static final int TRANSPARENT_FIELD_NUMBER = 5;
    private boolean transparent_;
    /**
     * <code>optional bool transparent = 5 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    public boolean hasTransparent() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bool transparent = 5 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    public boolean getTransparent() {
      return transparent_;
    }

    public static final int SMOOTH_EDGES_FIELD_NUMBER = 6;
    private boolean smoothEdges_;
    /**
     * <code>optional bool smooth_edges = 6 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    public boolean hasSmoothEdges() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool smooth_edges = 6 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    public boolean getSmoothEdges() {
      return smoothEdges_;
    }

    public static final int USE_AS_TILESET_FIELD_NUMBER = 7;
    private boolean useAsTileset_;
    /**
     * <code>optional bool use_as_tileset = 7 [(.buffers.gmx) = "istileset"];</code>
     */
    public boolean hasUseAsTileset() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool use_as_tileset = 7 [(.buffers.gmx) = "istileset"];</code>
     */
    public boolean getUseAsTileset() {
      return useAsTileset_;
    }

    public static final int TILE_WIDTH_FIELD_NUMBER = 11;
    private int tileWidth_;
    /**
     * <code>optional int32 tile_width = 11 [(.buffers.gmx) = "tilewidth"];</code>
     */
    public boolean hasTileWidth() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 tile_width = 11 [(.buffers.gmx) = "tilewidth"];</code>
     */
    public int getTileWidth() {
      return tileWidth_;
    }

    public static final int TILE_HEIGHT_FIELD_NUMBER = 12;
    private int tileHeight_;
    /**
     * <code>optional int32 tile_height = 12 [(.buffers.gmx) = "tileheight"];</code>
     */
    public boolean hasTileHeight() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 tile_height = 12 [(.buffers.gmx) = "tileheight"];</code>
     */
    public int getTileHeight() {
      return tileHeight_;
    }

    public static final int HORIZONTAL_OFFSET_FIELD_NUMBER = 13;
    private int horizontalOffset_;
    /**
     * <code>optional int32 horizontal_offset = 13 [(.buffers.gmx) = "tilexoff"];</code>
     */
    public boolean hasHorizontalOffset() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 horizontal_offset = 13 [(.buffers.gmx) = "tilexoff"];</code>
     */
    public int getHorizontalOffset() {
      return horizontalOffset_;
    }

    public static final int VERTICAL_OFFSET_FIELD_NUMBER = 14;
    private int verticalOffset_;
    /**
     * <code>optional int32 vertical_offset = 14 [(.buffers.gmx) = "tileyoff"];</code>
     */
    public boolean hasVerticalOffset() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 vertical_offset = 14 [(.buffers.gmx) = "tileyoff"];</code>
     */
    public int getVerticalOffset() {
      return verticalOffset_;
    }

    public static final int HORIZONTAL_SPACING_FIELD_NUMBER = 15;
    private int horizontalSpacing_;
    /**
     * <code>optional int32 horizontal_spacing = 15 [(.buffers.gmx) = "tilehsep"];</code>
     */
    public boolean hasHorizontalSpacing() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 horizontal_spacing = 15 [(.buffers.gmx) = "tilehsep"];</code>
     */
    public int getHorizontalSpacing() {
      return horizontalSpacing_;
    }

    public static final int VERTICAL_SPACING_FIELD_NUMBER = 16;
    private int verticalSpacing_;
    /**
     * <code>optional int32 vertical_spacing = 16 [(.buffers.gmx) = "tilevsep"];</code>
     */
    public boolean hasVerticalSpacing() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 vertical_spacing = 16 [(.buffers.gmx) = "tilevsep"];</code>
     */
    public int getVerticalSpacing() {
      return verticalSpacing_;
    }

    public static final int H_TILE_FIELD_NUMBER = 17;
    private int hTile_;
    /**
     * <code>optional int32 h_tile = 17 [(.buffers.gmx) = "HTile"];</code>
     */
    public boolean hasHTile() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 h_tile = 17 [(.buffers.gmx) = "HTile"];</code>
     */
    public int getHTile() {
      return hTile_;
    }

    public static final int V_TILE_FIELD_NUMBER = 18;
    private int vTile_;
    /**
     * <code>optional int32 v_tile = 18 [(.buffers.gmx) = "VTile"];</code>
     */
    public boolean hasVTile() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 v_tile = 18 [(.buffers.gmx) = "VTile"];</code>
     */
    public int getVTile() {
      return vTile_;
    }

    public static final int TEXTURE_GROUP_FIELD_NUMBER = 19;
    private int textureGroup_;
    /**
     * <code>optional int32 texture_group = 19 [(.buffers.gmx) = "TextureGroups/TextureGroup0"];</code>
     */
    public boolean hasTextureGroup() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 texture_group = 19 [(.buffers.gmx) = "TextureGroups/TextureGroup0"];</code>
     */
    public int getTextureGroup() {
      return textureGroup_;
    }

    public static final int FOR3D_FIELD_NUMBER = 20;
    private boolean for3D_;
    /**
     * <code>optional bool for3D = 20 [(.buffers.gmx) = "For3D"];</code>
     */
    public boolean hasFor3D() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional bool for3D = 20 [(.buffers.gmx) = "For3D"];</code>
     */
    public boolean getFor3D() {
      return for3D_;
    }

    public static final int WIDTH_FIELD_NUMBER = 21;
    private int width_;
    /**
     * <code>optional uint32 width = 21;</code>
     */
    public boolean hasWidth() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 width = 21;</code>
     */
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 22;
    private int height_;
    /**
     * <code>optional uint32 height = 22;</code>
     */
    public boolean hasHeight() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint32 height = 22;</code>
     */
    public int getHeight() {
      return height_;
    }

    public static final int IMAGE_FIELD_NUMBER = 3;
    private volatile java.lang.Object image_;
    /**
     * <code>optional string image = 3 [(.buffers.gmx) = "data", (.buffers.file_path) = true];</code>
     */
    public boolean hasImage() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional string image = 3 [(.buffers.gmx) = "data", (.buffers.file_path) = true];</code>
     */
    public java.lang.String getImage() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          image_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string image = 3 [(.buffers.gmx) = "data", (.buffers.file_path) = true];</code>
     */
    public com.google.protobuf.ByteString
        getImageBytes() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        image_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, image_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(4, preload_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(5, transparent_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(6, smoothEdges_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(7, useAsTileset_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(11, tileWidth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(12, tileHeight_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(13, horizontalOffset_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(14, verticalOffset_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(15, horizontalSpacing_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(16, verticalSpacing_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(17, hTile_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(18, vTile_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(19, textureGroup_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBool(20, for3D_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(21, width_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(22, height_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, image_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, preload_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, transparent_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, smoothEdges_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, useAsTileset_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, tileWidth_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, tileHeight_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, horizontalOffset_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, verticalOffset_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, horizontalSpacing_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, verticalSpacing_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, hTile_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, vTile_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, textureGroup_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, for3D_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, width_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, height_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof buffers.resources.BackgroundOuterClass.Background)) {
        return super.equals(obj);
      }
      buffers.resources.BackgroundOuterClass.Background other = (buffers.resources.BackgroundOuterClass.Background) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasId() == other.hasId());
      if (hasId()) {
        result = result && (getId()
            == other.getId());
      }
      result = result && (hasPreload() == other.hasPreload());
      if (hasPreload()) {
        result = result && (getPreload()
            == other.getPreload());
      }
      result = result && (hasTransparent() == other.hasTransparent());
      if (hasTransparent()) {
        result = result && (getTransparent()
            == other.getTransparent());
      }
      result = result && (hasSmoothEdges() == other.hasSmoothEdges());
      if (hasSmoothEdges()) {
        result = result && (getSmoothEdges()
            == other.getSmoothEdges());
      }
      result = result && (hasUseAsTileset() == other.hasUseAsTileset());
      if (hasUseAsTileset()) {
        result = result && (getUseAsTileset()
            == other.getUseAsTileset());
      }
      result = result && (hasTileWidth() == other.hasTileWidth());
      if (hasTileWidth()) {
        result = result && (getTileWidth()
            == other.getTileWidth());
      }
      result = result && (hasTileHeight() == other.hasTileHeight());
      if (hasTileHeight()) {
        result = result && (getTileHeight()
            == other.getTileHeight());
      }
      result = result && (hasHorizontalOffset() == other.hasHorizontalOffset());
      if (hasHorizontalOffset()) {
        result = result && (getHorizontalOffset()
            == other.getHorizontalOffset());
      }
      result = result && (hasVerticalOffset() == other.hasVerticalOffset());
      if (hasVerticalOffset()) {
        result = result && (getVerticalOffset()
            == other.getVerticalOffset());
      }
      result = result && (hasHorizontalSpacing() == other.hasHorizontalSpacing());
      if (hasHorizontalSpacing()) {
        result = result && (getHorizontalSpacing()
            == other.getHorizontalSpacing());
      }
      result = result && (hasVerticalSpacing() == other.hasVerticalSpacing());
      if (hasVerticalSpacing()) {
        result = result && (getVerticalSpacing()
            == other.getVerticalSpacing());
      }
      result = result && (hasHTile() == other.hasHTile());
      if (hasHTile()) {
        result = result && (getHTile()
            == other.getHTile());
      }
      result = result && (hasVTile() == other.hasVTile());
      if (hasVTile()) {
        result = result && (getVTile()
            == other.getVTile());
      }
      result = result && (hasTextureGroup() == other.hasTextureGroup());
      if (hasTextureGroup()) {
        result = result && (getTextureGroup()
            == other.getTextureGroup());
      }
      result = result && (hasFor3D() == other.hasFor3D());
      if (hasFor3D()) {
        result = result && (getFor3D()
            == other.getFor3D());
      }
      result = result && (hasWidth() == other.hasWidth());
      if (hasWidth()) {
        result = result && (getWidth()
            == other.getWidth());
      }
      result = result && (hasHeight() == other.hasHeight());
      if (hasHeight()) {
        result = result && (getHeight()
            == other.getHeight());
      }
      result = result && (hasImage() == other.hasImage());
      if (hasImage()) {
        result = result && getImage()
            .equals(other.getImage());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasPreload()) {
        hash = (37 * hash) + PRELOAD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPreload());
      }
      if (hasTransparent()) {
        hash = (37 * hash) + TRANSPARENT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTransparent());
      }
      if (hasSmoothEdges()) {
        hash = (37 * hash) + SMOOTH_EDGES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSmoothEdges());
      }
      if (hasUseAsTileset()) {
        hash = (37 * hash) + USE_AS_TILESET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getUseAsTileset());
      }
      if (hasTileWidth()) {
        hash = (37 * hash) + TILE_WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getTileWidth();
      }
      if (hasTileHeight()) {
        hash = (37 * hash) + TILE_HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getTileHeight();
      }
      if (hasHorizontalOffset()) {
        hash = (37 * hash) + HORIZONTAL_OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getHorizontalOffset();
      }
      if (hasVerticalOffset()) {
        hash = (37 * hash) + VERTICAL_OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + getVerticalOffset();
      }
      if (hasHorizontalSpacing()) {
        hash = (37 * hash) + HORIZONTAL_SPACING_FIELD_NUMBER;
        hash = (53 * hash) + getHorizontalSpacing();
      }
      if (hasVerticalSpacing()) {
        hash = (37 * hash) + VERTICAL_SPACING_FIELD_NUMBER;
        hash = (53 * hash) + getVerticalSpacing();
      }
      if (hasHTile()) {
        hash = (37 * hash) + H_TILE_FIELD_NUMBER;
        hash = (53 * hash) + getHTile();
      }
      if (hasVTile()) {
        hash = (37 * hash) + V_TILE_FIELD_NUMBER;
        hash = (53 * hash) + getVTile();
      }
      if (hasTextureGroup()) {
        hash = (37 * hash) + TEXTURE_GROUP_FIELD_NUMBER;
        hash = (53 * hash) + getTextureGroup();
      }
      if (hasFor3D()) {
        hash = (37 * hash) + FOR3D_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFor3D());
      }
      if (hasWidth()) {
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getWidth();
      }
      if (hasHeight()) {
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getHeight();
      }
      if (hasImage()) {
        hash = (37 * hash) + IMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getImage().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static buffers.resources.BackgroundOuterClass.Background parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static buffers.resources.BackgroundOuterClass.Background parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static buffers.resources.BackgroundOuterClass.Background parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static buffers.resources.BackgroundOuterClass.Background parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static buffers.resources.BackgroundOuterClass.Background parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static buffers.resources.BackgroundOuterClass.Background parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static buffers.resources.BackgroundOuterClass.Background parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static buffers.resources.BackgroundOuterClass.Background parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static buffers.resources.BackgroundOuterClass.Background parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static buffers.resources.BackgroundOuterClass.Background parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static buffers.resources.BackgroundOuterClass.Background parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static buffers.resources.BackgroundOuterClass.Background parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(buffers.resources.BackgroundOuterClass.Background prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code buffers.resources.Background}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:buffers.resources.Background)
        buffers.resources.BackgroundOuterClass.BackgroundOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffers.resources.BackgroundOuterClass.internal_static_buffers_resources_Background_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffers.resources.BackgroundOuterClass.internal_static_buffers_resources_Background_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                buffers.resources.BackgroundOuterClass.Background.class, buffers.resources.BackgroundOuterClass.Background.Builder.class);
      }

      // Construct using buffers.resources.BackgroundOuterClass.Background.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        preload_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        transparent_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        smoothEdges_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        useAsTileset_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        tileWidth_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        tileHeight_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        horizontalOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        verticalOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        horizontalSpacing_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        verticalSpacing_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        hTile_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        vTile_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        textureGroup_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        for3D_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        width_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        height_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        image_ = "";
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffers.resources.BackgroundOuterClass.internal_static_buffers_resources_Background_descriptor;
      }

      public buffers.resources.BackgroundOuterClass.Background getDefaultInstanceForType() {
        return buffers.resources.BackgroundOuterClass.Background.getDefaultInstance();
      }

      public buffers.resources.BackgroundOuterClass.Background build() {
        buffers.resources.BackgroundOuterClass.Background result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public buffers.resources.BackgroundOuterClass.Background buildPartial() {
        buffers.resources.BackgroundOuterClass.Background result = new buffers.resources.BackgroundOuterClass.Background(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.preload_ = preload_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.transparent_ = transparent_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.smoothEdges_ = smoothEdges_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.useAsTileset_ = useAsTileset_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tileWidth_ = tileWidth_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.tileHeight_ = tileHeight_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.horizontalOffset_ = horizontalOffset_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.verticalOffset_ = verticalOffset_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.horizontalSpacing_ = horizontalSpacing_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.verticalSpacing_ = verticalSpacing_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.hTile_ = hTile_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.vTile_ = vTile_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.textureGroup_ = textureGroup_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.for3D_ = for3D_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.width_ = width_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.height_ = height_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.image_ = image_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffers.resources.BackgroundOuterClass.Background) {
          return mergeFrom((buffers.resources.BackgroundOuterClass.Background)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(buffers.resources.BackgroundOuterClass.Background other) {
        if (other == buffers.resources.BackgroundOuterClass.Background.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasPreload()) {
          setPreload(other.getPreload());
        }
        if (other.hasTransparent()) {
          setTransparent(other.getTransparent());
        }
        if (other.hasSmoothEdges()) {
          setSmoothEdges(other.getSmoothEdges());
        }
        if (other.hasUseAsTileset()) {
          setUseAsTileset(other.getUseAsTileset());
        }
        if (other.hasTileWidth()) {
          setTileWidth(other.getTileWidth());
        }
        if (other.hasTileHeight()) {
          setTileHeight(other.getTileHeight());
        }
        if (other.hasHorizontalOffset()) {
          setHorizontalOffset(other.getHorizontalOffset());
        }
        if (other.hasVerticalOffset()) {
          setVerticalOffset(other.getVerticalOffset());
        }
        if (other.hasHorizontalSpacing()) {
          setHorizontalSpacing(other.getHorizontalSpacing());
        }
        if (other.hasVerticalSpacing()) {
          setVerticalSpacing(other.getVerticalSpacing());
        }
        if (other.hasHTile()) {
          setHTile(other.getHTile());
        }
        if (other.hasVTile()) {
          setVTile(other.getVTile());
        }
        if (other.hasTextureGroup()) {
          setTextureGroup(other.getTextureGroup());
        }
        if (other.hasFor3D()) {
          setFor3D(other.getFor3D());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasImage()) {
          bitField0_ |= 0x00040000;
          image_ = other.image_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        buffers.resources.BackgroundOuterClass.Background parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (buffers.resources.BackgroundOuterClass.Background) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private int id_ ;
      /**
       * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      private boolean preload_ ;
      /**
       * <code>optional bool preload = 4 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public boolean hasPreload() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool preload = 4 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public boolean getPreload() {
        return preload_;
      }
      /**
       * <code>optional bool preload = 4 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public Builder setPreload(boolean value) {
        bitField0_ |= 0x00000004;
        preload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool preload = 4 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public Builder clearPreload() {
        bitField0_ = (bitField0_ & ~0x00000004);
        preload_ = false;
        onChanged();
        return this;
      }

      private boolean transparent_ ;
      /**
       * <code>optional bool transparent = 5 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public boolean hasTransparent() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool transparent = 5 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public boolean getTransparent() {
        return transparent_;
      }
      /**
       * <code>optional bool transparent = 5 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public Builder setTransparent(boolean value) {
        bitField0_ |= 0x00000008;
        transparent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool transparent = 5 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public Builder clearTransparent() {
        bitField0_ = (bitField0_ & ~0x00000008);
        transparent_ = false;
        onChanged();
        return this;
      }

      private boolean smoothEdges_ ;
      /**
       * <code>optional bool smooth_edges = 6 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public boolean hasSmoothEdges() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool smooth_edges = 6 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public boolean getSmoothEdges() {
        return smoothEdges_;
      }
      /**
       * <code>optional bool smooth_edges = 6 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public Builder setSmoothEdges(boolean value) {
        bitField0_ |= 0x00000010;
        smoothEdges_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool smooth_edges = 6 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public Builder clearSmoothEdges() {
        bitField0_ = (bitField0_ & ~0x00000010);
        smoothEdges_ = false;
        onChanged();
        return this;
      }

      private boolean useAsTileset_ ;
      /**
       * <code>optional bool use_as_tileset = 7 [(.buffers.gmx) = "istileset"];</code>
       */
      public boolean hasUseAsTileset() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool use_as_tileset = 7 [(.buffers.gmx) = "istileset"];</code>
       */
      public boolean getUseAsTileset() {
        return useAsTileset_;
      }
      /**
       * <code>optional bool use_as_tileset = 7 [(.buffers.gmx) = "istileset"];</code>
       */
      public Builder setUseAsTileset(boolean value) {
        bitField0_ |= 0x00000020;
        useAsTileset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool use_as_tileset = 7 [(.buffers.gmx) = "istileset"];</code>
       */
      public Builder clearUseAsTileset() {
        bitField0_ = (bitField0_ & ~0x00000020);
        useAsTileset_ = false;
        onChanged();
        return this;
      }

      private int tileWidth_ ;
      /**
       * <code>optional int32 tile_width = 11 [(.buffers.gmx) = "tilewidth"];</code>
       */
      public boolean hasTileWidth() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 tile_width = 11 [(.buffers.gmx) = "tilewidth"];</code>
       */
      public int getTileWidth() {
        return tileWidth_;
      }
      /**
       * <code>optional int32 tile_width = 11 [(.buffers.gmx) = "tilewidth"];</code>
       */
      public Builder setTileWidth(int value) {
        bitField0_ |= 0x00000040;
        tileWidth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tile_width = 11 [(.buffers.gmx) = "tilewidth"];</code>
       */
      public Builder clearTileWidth() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tileWidth_ = 0;
        onChanged();
        return this;
      }

      private int tileHeight_ ;
      /**
       * <code>optional int32 tile_height = 12 [(.buffers.gmx) = "tileheight"];</code>
       */
      public boolean hasTileHeight() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 tile_height = 12 [(.buffers.gmx) = "tileheight"];</code>
       */
      public int getTileHeight() {
        return tileHeight_;
      }
      /**
       * <code>optional int32 tile_height = 12 [(.buffers.gmx) = "tileheight"];</code>
       */
      public Builder setTileHeight(int value) {
        bitField0_ |= 0x00000080;
        tileHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tile_height = 12 [(.buffers.gmx) = "tileheight"];</code>
       */
      public Builder clearTileHeight() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tileHeight_ = 0;
        onChanged();
        return this;
      }

      private int horizontalOffset_ ;
      /**
       * <code>optional int32 horizontal_offset = 13 [(.buffers.gmx) = "tilexoff"];</code>
       */
      public boolean hasHorizontalOffset() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 horizontal_offset = 13 [(.buffers.gmx) = "tilexoff"];</code>
       */
      public int getHorizontalOffset() {
        return horizontalOffset_;
      }
      /**
       * <code>optional int32 horizontal_offset = 13 [(.buffers.gmx) = "tilexoff"];</code>
       */
      public Builder setHorizontalOffset(int value) {
        bitField0_ |= 0x00000100;
        horizontalOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 horizontal_offset = 13 [(.buffers.gmx) = "tilexoff"];</code>
       */
      public Builder clearHorizontalOffset() {
        bitField0_ = (bitField0_ & ~0x00000100);
        horizontalOffset_ = 0;
        onChanged();
        return this;
      }

      private int verticalOffset_ ;
      /**
       * <code>optional int32 vertical_offset = 14 [(.buffers.gmx) = "tileyoff"];</code>
       */
      public boolean hasVerticalOffset() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 vertical_offset = 14 [(.buffers.gmx) = "tileyoff"];</code>
       */
      public int getVerticalOffset() {
        return verticalOffset_;
      }
      /**
       * <code>optional int32 vertical_offset = 14 [(.buffers.gmx) = "tileyoff"];</code>
       */
      public Builder setVerticalOffset(int value) {
        bitField0_ |= 0x00000200;
        verticalOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vertical_offset = 14 [(.buffers.gmx) = "tileyoff"];</code>
       */
      public Builder clearVerticalOffset() {
        bitField0_ = (bitField0_ & ~0x00000200);
        verticalOffset_ = 0;
        onChanged();
        return this;
      }

      private int horizontalSpacing_ ;
      /**
       * <code>optional int32 horizontal_spacing = 15 [(.buffers.gmx) = "tilehsep"];</code>
       */
      public boolean hasHorizontalSpacing() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 horizontal_spacing = 15 [(.buffers.gmx) = "tilehsep"];</code>
       */
      public int getHorizontalSpacing() {
        return horizontalSpacing_;
      }
      /**
       * <code>optional int32 horizontal_spacing = 15 [(.buffers.gmx) = "tilehsep"];</code>
       */
      public Builder setHorizontalSpacing(int value) {
        bitField0_ |= 0x00000400;
        horizontalSpacing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 horizontal_spacing = 15 [(.buffers.gmx) = "tilehsep"];</code>
       */
      public Builder clearHorizontalSpacing() {
        bitField0_ = (bitField0_ & ~0x00000400);
        horizontalSpacing_ = 0;
        onChanged();
        return this;
      }

      private int verticalSpacing_ ;
      /**
       * <code>optional int32 vertical_spacing = 16 [(.buffers.gmx) = "tilevsep"];</code>
       */
      public boolean hasVerticalSpacing() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 vertical_spacing = 16 [(.buffers.gmx) = "tilevsep"];</code>
       */
      public int getVerticalSpacing() {
        return verticalSpacing_;
      }
      /**
       * <code>optional int32 vertical_spacing = 16 [(.buffers.gmx) = "tilevsep"];</code>
       */
      public Builder setVerticalSpacing(int value) {
        bitField0_ |= 0x00000800;
        verticalSpacing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 vertical_spacing = 16 [(.buffers.gmx) = "tilevsep"];</code>
       */
      public Builder clearVerticalSpacing() {
        bitField0_ = (bitField0_ & ~0x00000800);
        verticalSpacing_ = 0;
        onChanged();
        return this;
      }

      private int hTile_ ;
      /**
       * <code>optional int32 h_tile = 17 [(.buffers.gmx) = "HTile"];</code>
       */
      public boolean hasHTile() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 h_tile = 17 [(.buffers.gmx) = "HTile"];</code>
       */
      public int getHTile() {
        return hTile_;
      }
      /**
       * <code>optional int32 h_tile = 17 [(.buffers.gmx) = "HTile"];</code>
       */
      public Builder setHTile(int value) {
        bitField0_ |= 0x00001000;
        hTile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 h_tile = 17 [(.buffers.gmx) = "HTile"];</code>
       */
      public Builder clearHTile() {
        bitField0_ = (bitField0_ & ~0x00001000);
        hTile_ = 0;
        onChanged();
        return this;
      }

      private int vTile_ ;
      /**
       * <code>optional int32 v_tile = 18 [(.buffers.gmx) = "VTile"];</code>
       */
      public boolean hasVTile() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 v_tile = 18 [(.buffers.gmx) = "VTile"];</code>
       */
      public int getVTile() {
        return vTile_;
      }
      /**
       * <code>optional int32 v_tile = 18 [(.buffers.gmx) = "VTile"];</code>
       */
      public Builder setVTile(int value) {
        bitField0_ |= 0x00002000;
        vTile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 v_tile = 18 [(.buffers.gmx) = "VTile"];</code>
       */
      public Builder clearVTile() {
        bitField0_ = (bitField0_ & ~0x00002000);
        vTile_ = 0;
        onChanged();
        return this;
      }

      private int textureGroup_ ;
      /**
       * <code>optional int32 texture_group = 19 [(.buffers.gmx) = "TextureGroups/TextureGroup0"];</code>
       */
      public boolean hasTextureGroup() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 texture_group = 19 [(.buffers.gmx) = "TextureGroups/TextureGroup0"];</code>
       */
      public int getTextureGroup() {
        return textureGroup_;
      }
      /**
       * <code>optional int32 texture_group = 19 [(.buffers.gmx) = "TextureGroups/TextureGroup0"];</code>
       */
      public Builder setTextureGroup(int value) {
        bitField0_ |= 0x00004000;
        textureGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 texture_group = 19 [(.buffers.gmx) = "TextureGroups/TextureGroup0"];</code>
       */
      public Builder clearTextureGroup() {
        bitField0_ = (bitField0_ & ~0x00004000);
        textureGroup_ = 0;
        onChanged();
        return this;
      }

      private boolean for3D_ ;
      /**
       * <code>optional bool for3D = 20 [(.buffers.gmx) = "For3D"];</code>
       */
      public boolean hasFor3D() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional bool for3D = 20 [(.buffers.gmx) = "For3D"];</code>
       */
      public boolean getFor3D() {
        return for3D_;
      }
      /**
       * <code>optional bool for3D = 20 [(.buffers.gmx) = "For3D"];</code>
       */
      public Builder setFor3D(boolean value) {
        bitField0_ |= 0x00008000;
        for3D_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool for3D = 20 [(.buffers.gmx) = "For3D"];</code>
       */
      public Builder clearFor3D() {
        bitField0_ = (bitField0_ & ~0x00008000);
        for3D_ = false;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <code>optional uint32 width = 21;</code>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 width = 21;</code>
       */
      public int getWidth() {
        return width_;
      }
      /**
       * <code>optional uint32 width = 21;</code>
       */
      public Builder setWidth(int value) {
        bitField0_ |= 0x00010000;
        width_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 width = 21;</code>
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00010000);
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <code>optional uint32 height = 22;</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 height = 22;</code>
       */
      public int getHeight() {
        return height_;
      }
      /**
       * <code>optional uint32 height = 22;</code>
       */
      public Builder setHeight(int value) {
        bitField0_ |= 0x00020000;
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 height = 22;</code>
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00020000);
        height_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object image_ = "";
      /**
       * <code>optional string image = 3 [(.buffers.gmx) = "data", (.buffers.file_path) = true];</code>
       */
      public boolean hasImage() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string image = 3 [(.buffers.gmx) = "data", (.buffers.file_path) = true];</code>
       */
      public java.lang.String getImage() {
        java.lang.Object ref = image_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            image_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string image = 3 [(.buffers.gmx) = "data", (.buffers.file_path) = true];</code>
       */
      public com.google.protobuf.ByteString
          getImageBytes() {
        java.lang.Object ref = image_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          image_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string image = 3 [(.buffers.gmx) = "data", (.buffers.file_path) = true];</code>
       */
      public Builder setImage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        image_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string image = 3 [(.buffers.gmx) = "data", (.buffers.file_path) = true];</code>
       */
      public Builder clearImage() {
        bitField0_ = (bitField0_ & ~0x00040000);
        image_ = getDefaultInstance().getImage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string image = 3 [(.buffers.gmx) = "data", (.buffers.file_path) = true];</code>
       */
      public Builder setImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        image_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:buffers.resources.Background)
    }

    // @@protoc_insertion_point(class_scope:buffers.resources.Background)
    private static final buffers.resources.BackgroundOuterClass.Background DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new buffers.resources.BackgroundOuterClass.Background();
    }

    public static buffers.resources.BackgroundOuterClass.Background getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Background>
        PARSER = new com.google.protobuf.AbstractParser<Background>() {
      public Background parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Background(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Background> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Background> getParserForType() {
      return PARSER;
    }

    public buffers.resources.BackgroundOuterClass.Background getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buffers_resources_Background_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buffers_resources_Background_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032resources/Background.proto\022\021buffers.re" +
      "sources\032\roptions.proto\"\207\005\n\nBackground\022\014\n" +
      "\004name\030\001 \001(\t\022\036\n\002id\030\002 \001(\005B\022\202\265\030\016GMX_DEPRECA" +
      "TED\022#\n\007preload\030\004 \001(\010B\022\202\265\030\016GMX_DEPRECATED" +
      "\022\'\n\013transparent\030\005 \001(\010B\022\202\265\030\016GMX_DEPRECATE" +
      "D\022(\n\014smooth_edges\030\006 \001(\010B\022\202\265\030\016GMX_DEPRECA" +
      "TED\022%\n\016use_as_tileset\030\007 \001(\010B\r\202\265\030\tistiles" +
      "et\022!\n\ntile_width\030\013 \001(\005B\r\202\265\030\ttilewidth\022#\n" +
      "\013tile_height\030\014 \001(\005B\016\202\265\030\ntileheight\022\'\n\021ho" +
      "rizontal_offset\030\r \001(\005B\014\202\265\030\010tilexoff\022%\n\017v" +
      "ertical_offset\030\016 \001(\005B\014\202\265\030\010tileyoff\022(\n\022ho" +
      "rizontal_spacing\030\017 \001(\005B\014\202\265\030\010tilehsep\022&\n\020" +
      "vertical_spacing\030\020 \001(\005B\014\202\265\030\010tilevsep\022\031\n\006" +
      "h_tile\030\021 \001(\005B\t\202\265\030\005HTile\022\031\n\006v_tile\030\022 \001(\005B" +
      "\t\202\265\030\005VTile\0226\n\rtexture_group\030\023 \001(\005B\037\202\265\030\033T" +
      "extureGroups/TextureGroup0\022\030\n\005for3D\030\024 \001(" +
      "\010B\t\202\265\030\005For3D\022\r\n\005width\030\025 \001(\r\022\016\n\006height\030\026 " +
      "\001(\r\022\033\n\005image\030\003 \001(\tB\014\202\265\030\004data\230\265\030\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          buffers.Options.getDescriptor(),
        }, assigner);
    internal_static_buffers_resources_Background_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_buffers_resources_Background_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buffers_resources_Background_descriptor,
        new java.lang.String[] { "Name", "Id", "Preload", "Transparent", "SmoothEdges", "UseAsTileset", "TileWidth", "TileHeight", "HorizontalOffset", "VerticalOffset", "HorizontalSpacing", "VerticalSpacing", "HTile", "VTile", "TextureGroup", "For3D", "Width", "Height", "Image", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(buffers.Options.filePath);
    registry.add(buffers.Options.gmx);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    buffers.Options.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
