// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resources/Sound.proto

package buffers.resources;

public final class SoundOuterClass {
  private SoundOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SoundOrBuilder extends
      // @@protoc_insertion_point(interface_extends:buffers.resources.Sound)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    int getId();

    /**
     * <code>optional bool preload = 3;</code>
     */
    boolean hasPreload();
    /**
     * <code>optional bool preload = 3;</code>
     */
    boolean getPreload();

    /**
     * <code>optional double pan = 4;</code>
     */
    boolean hasPan();
    /**
     * <code>optional double pan = 4;</code>
     */
    double getPan();

    /**
     * <code>optional double volume = 5 [(.buffers.gmx) = "volume/volume"];</code>
     */
    boolean hasVolume();
    /**
     * <code>optional double volume = 5 [(.buffers.gmx) = "volume/volume"];</code>
     */
    double getVolume();

    /**
     * <code>optional string file_name = 6 [(.buffers.gmx) = "data"];</code>
     */
    boolean hasFileName();
    /**
     * <code>optional string file_name = 6 [(.buffers.gmx) = "data"];</code>
     */
    java.lang.String getFileName();
    /**
     * <code>optional string file_name = 6 [(.buffers.gmx) = "data"];</code>
     */
    com.google.protobuf.ByteString
        getFileNameBytes();

    /**
     * <code>optional string file_extension = 7 [(.buffers.gmx) = "extension"];</code>
     */
    boolean hasFileExtension();
    /**
     * <code>optional string file_extension = 7 [(.buffers.gmx) = "extension"];</code>
     */
    java.lang.String getFileExtension();
    /**
     * <code>optional string file_extension = 7 [(.buffers.gmx) = "extension"];</code>
     */
    com.google.protobuf.ByteString
        getFileExtensionBytes();

    /**
     * <code>optional .buffers.resources.Sound.Kind kind = 8;</code>
     */
    boolean hasKind();
    /**
     * <code>optional .buffers.resources.Sound.Kind kind = 8;</code>
     */
    buffers.resources.SoundOuterClass.Sound.Kind getKind();

    /**
     * <code>optional .buffers.resources.Sound.Type type = 9 [(.buffers.gmx) = "types/type"];</code>
     */
    boolean hasType();
    /**
     * <code>optional .buffers.resources.Sound.Type type = 9 [(.buffers.gmx) = "types/type"];</code>
     */
    buffers.resources.SoundOuterClass.Sound.Type getType();

    /**
     * <code>optional string data = 10 [(.buffers.gmx) = "origname", (.buffers.file_path) = true];</code>
     */
    boolean hasData();
    /**
     * <code>optional string data = 10 [(.buffers.gmx) = "origname", (.buffers.file_path) = true];</code>
     */
    java.lang.String getData();
    /**
     * <code>optional string data = 10 [(.buffers.gmx) = "origname", (.buffers.file_path) = true];</code>
     */
    com.google.protobuf.ByteString
        getDataBytes();

    /**
     * <code>optional int32 effects = 11;</code>
     */
    boolean hasEffects();
    /**
     * <code>optional int32 effects = 11;</code>
     */
    int getEffects();

    /**
     * <code>optional uint32 bit_rate = 12 [(.buffers.gmx) = "bitRates/bitRate"];</code>
     */
    boolean hasBitRate();
    /**
     * <code>optional uint32 bit_rate = 12 [(.buffers.gmx) = "bitRates/bitRate"];</code>
     */
    int getBitRate();

    /**
     * <code>optional uint32 sample_rate = 13 [(.buffers.gmx) = "sampleRates/sampleRate"];</code>
     */
    boolean hasSampleRate();
    /**
     * <code>optional uint32 sample_rate = 13 [(.buffers.gmx) = "sampleRates/sampleRate"];</code>
     */
    int getSampleRate();

    /**
     * <code>optional uint32 bit_depth = 14 [(.buffers.gmx) = "bitDepths/bitDepth"];</code>
     */
    boolean hasBitDepth();
    /**
     * <code>optional uint32 bit_depth = 14 [(.buffers.gmx) = "bitDepths/bitDepth"];</code>
     */
    int getBitDepth();

    /**
     * <code>optional bool compressed = 15;</code>
     */
    boolean hasCompressed();
    /**
     * <code>optional bool compressed = 15;</code>
     */
    boolean getCompressed();

    /**
     * <code>optional bool streamed = 16;</code>
     */
    boolean hasStreamed();
    /**
     * <code>optional bool streamed = 16;</code>
     */
    boolean getStreamed();

    /**
     * <code>optional bool uncompress_on_load = 17 [(.buffers.gmx) = "uncompressOnLoad"];</code>
     */
    boolean hasUncompressOnLoad();
    /**
     * <code>optional bool uncompress_on_load = 17 [(.buffers.gmx) = "uncompressOnLoad"];</code>
     */
    boolean getUncompressOnLoad();

    /**
     * <code>optional int32 audio_group = 18 [(.buffers.gmx) = "audioGroup"];</code>
     */
    boolean hasAudioGroup();
    /**
     * <code>optional int32 audio_group = 18 [(.buffers.gmx) = "audioGroup"];</code>
     */
    int getAudioGroup();
  }
  /**
   * Protobuf type {@code buffers.resources.Sound}
   */
  public  static final class Sound extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:buffers.resources.Sound)
      SoundOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Sound.newBuilder() to construct.
    private Sound(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Sound() {
      name_ = "";
      id_ = 0;
      preload_ = false;
      pan_ = 0D;
      volume_ = 0D;
      fileName_ = "";
      fileExtension_ = "";
      kind_ = 0;
      type_ = 0;
      data_ = "";
      effects_ = 0;
      bitRate_ = 0;
      sampleRate_ = 0;
      bitDepth_ = 0;
      compressed_ = false;
      streamed_ = false;
      uncompressOnLoad_ = false;
      audioGroup_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Sound(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              preload_ = input.readBool();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              pan_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              volume_ = input.readDouble();
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              fileName_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              fileExtension_ = bs;
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              buffers.resources.SoundOuterClass.Sound.Kind value = buffers.resources.SoundOuterClass.Sound.Kind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                bitField0_ |= 0x00000080;
                kind_ = rawValue;
              }
              break;
            }
            case 72: {
              int rawValue = input.readEnum();
              buffers.resources.SoundOuterClass.Sound.Type value = buffers.resources.SoundOuterClass.Sound.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(9, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                type_ = rawValue;
              }
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              data_ = bs;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              effects_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              bitRate_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              sampleRate_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              bitDepth_ = input.readUInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              compressed_ = input.readBool();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              streamed_ = input.readBool();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              uncompressOnLoad_ = input.readBool();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              audioGroup_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffers.resources.SoundOuterClass.internal_static_buffers_resources_Sound_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffers.resources.SoundOuterClass.internal_static_buffers_resources_Sound_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              buffers.resources.SoundOuterClass.Sound.class, buffers.resources.SoundOuterClass.Sound.Builder.class);
    }

    /**
     * Protobuf enum {@code buffers.resources.Sound.Kind}
     */
    public enum Kind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NORMAL = 0;</code>
       */
      NORMAL(0),
      /**
       * <code>BACKGROUND_MUSIC = 1;</code>
       */
      BACKGROUND_MUSIC(1),
      /**
       * <code>THREE_DIMENSIONAL = 2;</code>
       */
      THREE_DIMENSIONAL(2),
      /**
       * <code>MULTIMEDIA_PLAYER = 3;</code>
       */
      MULTIMEDIA_PLAYER(3),
      ;

      /**
       * <code>NORMAL = 0;</code>
       */
      public static final int NORMAL_VALUE = 0;
      /**
       * <code>BACKGROUND_MUSIC = 1;</code>
       */
      public static final int BACKGROUND_MUSIC_VALUE = 1;
      /**
       * <code>THREE_DIMENSIONAL = 2;</code>
       */
      public static final int THREE_DIMENSIONAL_VALUE = 2;
      /**
       * <code>MULTIMEDIA_PLAYER = 3;</code>
       */
      public static final int MULTIMEDIA_PLAYER_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Kind valueOf(int value) {
        return forNumber(value);
      }

      public static Kind forNumber(int value) {
        switch (value) {
          case 0: return NORMAL;
          case 1: return BACKGROUND_MUSIC;
          case 2: return THREE_DIMENSIONAL;
          case 3: return MULTIMEDIA_PLAYER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Kind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Kind> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
              public Kind findValueByNumber(int number) {
                return Kind.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return buffers.resources.SoundOuterClass.Sound.getDescriptor().getEnumTypes().get(0);
      }

      private static final Kind[] VALUES = values();

      public static Kind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Kind(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:buffers.resources.Sound.Kind)
    }

    /**
     * Protobuf enum {@code buffers.resources.Sound.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>MONO = 0;</code>
       */
      MONO(0),
      /**
       * <code>STEREO = 1;</code>
       */
      STEREO(1),
      /**
       * <code>POSITIONAL = 2;</code>
       */
      POSITIONAL(2),
      ;

      /**
       * <code>MONO = 0;</code>
       */
      public static final int MONO_VALUE = 0;
      /**
       * <code>STEREO = 1;</code>
       */
      public static final int STEREO_VALUE = 1;
      /**
       * <code>POSITIONAL = 2;</code>
       */
      public static final int POSITIONAL_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      public static Type forNumber(int value) {
        switch (value) {
          case 0: return MONO;
          case 1: return STEREO;
          case 2: return POSITIONAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return buffers.resources.SoundOuterClass.Sound.getDescriptor().getEnumTypes().get(1);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:buffers.resources.Sound.Type)
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    public int getId() {
      return id_;
    }

    public static final int PRELOAD_FIELD_NUMBER = 3;
    private boolean preload_;
    /**
     * <code>optional bool preload = 3;</code>
     */
    public boolean hasPreload() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool preload = 3;</code>
     */
    public boolean getPreload() {
      return preload_;
    }

    public static final int PAN_FIELD_NUMBER = 4;
    private double pan_;
    /**
     * <code>optional double pan = 4;</code>
     */
    public boolean hasPan() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double pan = 4;</code>
     */
    public double getPan() {
      return pan_;
    }

    public static final int VOLUME_FIELD_NUMBER = 5;
    private double volume_;
    /**
     * <code>optional double volume = 5 [(.buffers.gmx) = "volume/volume"];</code>
     */
    public boolean hasVolume() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double volume = 5 [(.buffers.gmx) = "volume/volume"];</code>
     */
    public double getVolume() {
      return volume_;
    }

    public static final int FILE_NAME_FIELD_NUMBER = 6;
    private volatile java.lang.Object fileName_;
    /**
     * <code>optional string file_name = 6 [(.buffers.gmx) = "data"];</code>
     */
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string file_name = 6 [(.buffers.gmx) = "data"];</code>
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fileName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string file_name = 6 [(.buffers.gmx) = "data"];</code>
     */
    public com.google.protobuf.ByteString
        getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILE_EXTENSION_FIELD_NUMBER = 7;
    private volatile java.lang.Object fileExtension_;
    /**
     * <code>optional string file_extension = 7 [(.buffers.gmx) = "extension"];</code>
     */
    public boolean hasFileExtension() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string file_extension = 7 [(.buffers.gmx) = "extension"];</code>
     */
    public java.lang.String getFileExtension() {
      java.lang.Object ref = fileExtension_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fileExtension_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string file_extension = 7 [(.buffers.gmx) = "extension"];</code>
     */
    public com.google.protobuf.ByteString
        getFileExtensionBytes() {
      java.lang.Object ref = fileExtension_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileExtension_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KIND_FIELD_NUMBER = 8;
    private int kind_;
    /**
     * <code>optional .buffers.resources.Sound.Kind kind = 8;</code>
     */
    public boolean hasKind() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .buffers.resources.Sound.Kind kind = 8;</code>
     */
    public buffers.resources.SoundOuterClass.Sound.Kind getKind() {
      buffers.resources.SoundOuterClass.Sound.Kind result = buffers.resources.SoundOuterClass.Sound.Kind.valueOf(kind_);
      return result == null ? buffers.resources.SoundOuterClass.Sound.Kind.NORMAL : result;
    }

    public static final int TYPE_FIELD_NUMBER = 9;
    private int type_;
    /**
     * <code>optional .buffers.resources.Sound.Type type = 9 [(.buffers.gmx) = "types/type"];</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .buffers.resources.Sound.Type type = 9 [(.buffers.gmx) = "types/type"];</code>
     */
    public buffers.resources.SoundOuterClass.Sound.Type getType() {
      buffers.resources.SoundOuterClass.Sound.Type result = buffers.resources.SoundOuterClass.Sound.Type.valueOf(type_);
      return result == null ? buffers.resources.SoundOuterClass.Sound.Type.MONO : result;
    }

    public static final int DATA_FIELD_NUMBER = 10;
    private volatile java.lang.Object data_;
    /**
     * <code>optional string data = 10 [(.buffers.gmx) = "origname", (.buffers.file_path) = true];</code>
     */
    public boolean hasData() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string data = 10 [(.buffers.gmx) = "origname", (.buffers.file_path) = true];</code>
     */
    public java.lang.String getData() {
      java.lang.Object ref = data_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          data_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string data = 10 [(.buffers.gmx) = "origname", (.buffers.file_path) = true];</code>
     */
    public com.google.protobuf.ByteString
        getDataBytes() {
      java.lang.Object ref = data_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        data_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EFFECTS_FIELD_NUMBER = 11;
    private int effects_;
    /**
     * <code>optional int32 effects = 11;</code>
     */
    public boolean hasEffects() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 effects = 11;</code>
     */
    public int getEffects() {
      return effects_;
    }

    public static final int BIT_RATE_FIELD_NUMBER = 12;
    private int bitRate_;
    /**
     * <code>optional uint32 bit_rate = 12 [(.buffers.gmx) = "bitRates/bitRate"];</code>
     */
    public boolean hasBitRate() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 bit_rate = 12 [(.buffers.gmx) = "bitRates/bitRate"];</code>
     */
    public int getBitRate() {
      return bitRate_;
    }

    public static final int SAMPLE_RATE_FIELD_NUMBER = 13;
    private int sampleRate_;
    /**
     * <code>optional uint32 sample_rate = 13 [(.buffers.gmx) = "sampleRates/sampleRate"];</code>
     */
    public boolean hasSampleRate() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 sample_rate = 13 [(.buffers.gmx) = "sampleRates/sampleRate"];</code>
     */
    public int getSampleRate() {
      return sampleRate_;
    }

    public static final int BIT_DEPTH_FIELD_NUMBER = 14;
    private int bitDepth_;
    /**
     * <code>optional uint32 bit_depth = 14 [(.buffers.gmx) = "bitDepths/bitDepth"];</code>
     */
    public boolean hasBitDepth() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 bit_depth = 14 [(.buffers.gmx) = "bitDepths/bitDepth"];</code>
     */
    public int getBitDepth() {
      return bitDepth_;
    }

    public static final int COMPRESSED_FIELD_NUMBER = 15;
    private boolean compressed_;
    /**
     * <code>optional bool compressed = 15;</code>
     */
    public boolean hasCompressed() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional bool compressed = 15;</code>
     */
    public boolean getCompressed() {
      return compressed_;
    }

    public static final int STREAMED_FIELD_NUMBER = 16;
    private boolean streamed_;
    /**
     * <code>optional bool streamed = 16;</code>
     */
    public boolean hasStreamed() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional bool streamed = 16;</code>
     */
    public boolean getStreamed() {
      return streamed_;
    }

    public static final int UNCOMPRESS_ON_LOAD_FIELD_NUMBER = 17;
    private boolean uncompressOnLoad_;
    /**
     * <code>optional bool uncompress_on_load = 17 [(.buffers.gmx) = "uncompressOnLoad"];</code>
     */
    public boolean hasUncompressOnLoad() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bool uncompress_on_load = 17 [(.buffers.gmx) = "uncompressOnLoad"];</code>
     */
    public boolean getUncompressOnLoad() {
      return uncompressOnLoad_;
    }

    public static final int AUDIO_GROUP_FIELD_NUMBER = 18;
    private int audioGroup_;
    /**
     * <code>optional int32 audio_group = 18 [(.buffers.gmx) = "audioGroup"];</code>
     */
    public boolean hasAudioGroup() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 audio_group = 18 [(.buffers.gmx) = "audioGroup"];</code>
     */
    public int getAudioGroup() {
      return audioGroup_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, preload_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, pan_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, volume_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, fileName_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 7, fileExtension_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeEnum(8, kind_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(9, type_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 10, data_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, effects_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, bitRate_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(13, sampleRate_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(14, bitDepth_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBool(15, compressed_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBool(16, streamed_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(17, uncompressOnLoad_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, audioGroup_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, preload_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, pan_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, volume_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, fileName_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, fileExtension_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, kind_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(9, type_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, data_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, effects_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, bitRate_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, sampleRate_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, bitDepth_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, compressed_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, streamed_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(17, uncompressOnLoad_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, audioGroup_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof buffers.resources.SoundOuterClass.Sound)) {
        return super.equals(obj);
      }
      buffers.resources.SoundOuterClass.Sound other = (buffers.resources.SoundOuterClass.Sound) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasId() == other.hasId());
      if (hasId()) {
        result = result && (getId()
            == other.getId());
      }
      result = result && (hasPreload() == other.hasPreload());
      if (hasPreload()) {
        result = result && (getPreload()
            == other.getPreload());
      }
      result = result && (hasPan() == other.hasPan());
      if (hasPan()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getPan())
            == java.lang.Double.doubleToLongBits(
                other.getPan()));
      }
      result = result && (hasVolume() == other.hasVolume());
      if (hasVolume()) {
        result = result && (
            java.lang.Double.doubleToLongBits(getVolume())
            == java.lang.Double.doubleToLongBits(
                other.getVolume()));
      }
      result = result && (hasFileName() == other.hasFileName());
      if (hasFileName()) {
        result = result && getFileName()
            .equals(other.getFileName());
      }
      result = result && (hasFileExtension() == other.hasFileExtension());
      if (hasFileExtension()) {
        result = result && getFileExtension()
            .equals(other.getFileExtension());
      }
      result = result && (hasKind() == other.hasKind());
      if (hasKind()) {
        result = result && kind_ == other.kind_;
      }
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && type_ == other.type_;
      }
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && (hasEffects() == other.hasEffects());
      if (hasEffects()) {
        result = result && (getEffects()
            == other.getEffects());
      }
      result = result && (hasBitRate() == other.hasBitRate());
      if (hasBitRate()) {
        result = result && (getBitRate()
            == other.getBitRate());
      }
      result = result && (hasSampleRate() == other.hasSampleRate());
      if (hasSampleRate()) {
        result = result && (getSampleRate()
            == other.getSampleRate());
      }
      result = result && (hasBitDepth() == other.hasBitDepth());
      if (hasBitDepth()) {
        result = result && (getBitDepth()
            == other.getBitDepth());
      }
      result = result && (hasCompressed() == other.hasCompressed());
      if (hasCompressed()) {
        result = result && (getCompressed()
            == other.getCompressed());
      }
      result = result && (hasStreamed() == other.hasStreamed());
      if (hasStreamed()) {
        result = result && (getStreamed()
            == other.getStreamed());
      }
      result = result && (hasUncompressOnLoad() == other.hasUncompressOnLoad());
      if (hasUncompressOnLoad()) {
        result = result && (getUncompressOnLoad()
            == other.getUncompressOnLoad());
      }
      result = result && (hasAudioGroup() == other.hasAudioGroup());
      if (hasAudioGroup()) {
        result = result && (getAudioGroup()
            == other.getAudioGroup());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasPreload()) {
        hash = (37 * hash) + PRELOAD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPreload());
      }
      if (hasPan()) {
        hash = (37 * hash) + PAN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPan()));
      }
      if (hasVolume()) {
        hash = (37 * hash) + VOLUME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getVolume()));
      }
      if (hasFileName()) {
        hash = (37 * hash) + FILE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getFileName().hashCode();
      }
      if (hasFileExtension()) {
        hash = (37 * hash) + FILE_EXTENSION_FIELD_NUMBER;
        hash = (53 * hash) + getFileExtension().hashCode();
      }
      if (hasKind()) {
        hash = (37 * hash) + KIND_FIELD_NUMBER;
        hash = (53 * hash) + kind_;
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      if (hasEffects()) {
        hash = (37 * hash) + EFFECTS_FIELD_NUMBER;
        hash = (53 * hash) + getEffects();
      }
      if (hasBitRate()) {
        hash = (37 * hash) + BIT_RATE_FIELD_NUMBER;
        hash = (53 * hash) + getBitRate();
      }
      if (hasSampleRate()) {
        hash = (37 * hash) + SAMPLE_RATE_FIELD_NUMBER;
        hash = (53 * hash) + getSampleRate();
      }
      if (hasBitDepth()) {
        hash = (37 * hash) + BIT_DEPTH_FIELD_NUMBER;
        hash = (53 * hash) + getBitDepth();
      }
      if (hasCompressed()) {
        hash = (37 * hash) + COMPRESSED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getCompressed());
      }
      if (hasStreamed()) {
        hash = (37 * hash) + STREAMED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getStreamed());
      }
      if (hasUncompressOnLoad()) {
        hash = (37 * hash) + UNCOMPRESS_ON_LOAD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getUncompressOnLoad());
      }
      if (hasAudioGroup()) {
        hash = (37 * hash) + AUDIO_GROUP_FIELD_NUMBER;
        hash = (53 * hash) + getAudioGroup();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static buffers.resources.SoundOuterClass.Sound parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static buffers.resources.SoundOuterClass.Sound parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static buffers.resources.SoundOuterClass.Sound parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static buffers.resources.SoundOuterClass.Sound parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static buffers.resources.SoundOuterClass.Sound parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static buffers.resources.SoundOuterClass.Sound parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static buffers.resources.SoundOuterClass.Sound parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static buffers.resources.SoundOuterClass.Sound parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static buffers.resources.SoundOuterClass.Sound parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static buffers.resources.SoundOuterClass.Sound parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static buffers.resources.SoundOuterClass.Sound parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static buffers.resources.SoundOuterClass.Sound parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(buffers.resources.SoundOuterClass.Sound prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code buffers.resources.Sound}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:buffers.resources.Sound)
        buffers.resources.SoundOuterClass.SoundOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffers.resources.SoundOuterClass.internal_static_buffers_resources_Sound_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffers.resources.SoundOuterClass.internal_static_buffers_resources_Sound_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                buffers.resources.SoundOuterClass.Sound.class, buffers.resources.SoundOuterClass.Sound.Builder.class);
      }

      // Construct using buffers.resources.SoundOuterClass.Sound.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        preload_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        pan_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        volume_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        fileName_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        fileExtension_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        kind_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        data_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        effects_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        bitRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        sampleRate_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        bitDepth_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        compressed_ = false;
        bitField0_ = (bitField0_ & ~0x00004000);
        streamed_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        uncompressOnLoad_ = false;
        bitField0_ = (bitField0_ & ~0x00010000);
        audioGroup_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffers.resources.SoundOuterClass.internal_static_buffers_resources_Sound_descriptor;
      }

      public buffers.resources.SoundOuterClass.Sound getDefaultInstanceForType() {
        return buffers.resources.SoundOuterClass.Sound.getDefaultInstance();
      }

      public buffers.resources.SoundOuterClass.Sound build() {
        buffers.resources.SoundOuterClass.Sound result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public buffers.resources.SoundOuterClass.Sound buildPartial() {
        buffers.resources.SoundOuterClass.Sound result = new buffers.resources.SoundOuterClass.Sound(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.preload_ = preload_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pan_ = pan_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.volume_ = volume_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.fileName_ = fileName_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.fileExtension_ = fileExtension_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.kind_ = kind_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.data_ = data_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.effects_ = effects_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.bitRate_ = bitRate_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.sampleRate_ = sampleRate_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.bitDepth_ = bitDepth_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.compressed_ = compressed_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.streamed_ = streamed_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.uncompressOnLoad_ = uncompressOnLoad_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.audioGroup_ = audioGroup_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffers.resources.SoundOuterClass.Sound) {
          return mergeFrom((buffers.resources.SoundOuterClass.Sound)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(buffers.resources.SoundOuterClass.Sound other) {
        if (other == buffers.resources.SoundOuterClass.Sound.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasPreload()) {
          setPreload(other.getPreload());
        }
        if (other.hasPan()) {
          setPan(other.getPan());
        }
        if (other.hasVolume()) {
          setVolume(other.getVolume());
        }
        if (other.hasFileName()) {
          bitField0_ |= 0x00000020;
          fileName_ = other.fileName_;
          onChanged();
        }
        if (other.hasFileExtension()) {
          bitField0_ |= 0x00000040;
          fileExtension_ = other.fileExtension_;
          onChanged();
        }
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasData()) {
          bitField0_ |= 0x00000200;
          data_ = other.data_;
          onChanged();
        }
        if (other.hasEffects()) {
          setEffects(other.getEffects());
        }
        if (other.hasBitRate()) {
          setBitRate(other.getBitRate());
        }
        if (other.hasSampleRate()) {
          setSampleRate(other.getSampleRate());
        }
        if (other.hasBitDepth()) {
          setBitDepth(other.getBitDepth());
        }
        if (other.hasCompressed()) {
          setCompressed(other.getCompressed());
        }
        if (other.hasStreamed()) {
          setStreamed(other.getStreamed());
        }
        if (other.hasUncompressOnLoad()) {
          setUncompressOnLoad(other.getUncompressOnLoad());
        }
        if (other.hasAudioGroup()) {
          setAudioGroup(other.getAudioGroup());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        buffers.resources.SoundOuterClass.Sound parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (buffers.resources.SoundOuterClass.Sound) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private int id_ ;
      /**
       * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      private boolean preload_ ;
      /**
       * <code>optional bool preload = 3;</code>
       */
      public boolean hasPreload() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool preload = 3;</code>
       */
      public boolean getPreload() {
        return preload_;
      }
      /**
       * <code>optional bool preload = 3;</code>
       */
      public Builder setPreload(boolean value) {
        bitField0_ |= 0x00000004;
        preload_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool preload = 3;</code>
       */
      public Builder clearPreload() {
        bitField0_ = (bitField0_ & ~0x00000004);
        preload_ = false;
        onChanged();
        return this;
      }

      private double pan_ ;
      /**
       * <code>optional double pan = 4;</code>
       */
      public boolean hasPan() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double pan = 4;</code>
       */
      public double getPan() {
        return pan_;
      }
      /**
       * <code>optional double pan = 4;</code>
       */
      public Builder setPan(double value) {
        bitField0_ |= 0x00000008;
        pan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double pan = 4;</code>
       */
      public Builder clearPan() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pan_ = 0D;
        onChanged();
        return this;
      }

      private double volume_ ;
      /**
       * <code>optional double volume = 5 [(.buffers.gmx) = "volume/volume"];</code>
       */
      public boolean hasVolume() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double volume = 5 [(.buffers.gmx) = "volume/volume"];</code>
       */
      public double getVolume() {
        return volume_;
      }
      /**
       * <code>optional double volume = 5 [(.buffers.gmx) = "volume/volume"];</code>
       */
      public Builder setVolume(double value) {
        bitField0_ |= 0x00000010;
        volume_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double volume = 5 [(.buffers.gmx) = "volume/volume"];</code>
       */
      public Builder clearVolume() {
        bitField0_ = (bitField0_ & ~0x00000010);
        volume_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object fileName_ = "";
      /**
       * <code>optional string file_name = 6 [(.buffers.gmx) = "data"];</code>
       */
      public boolean hasFileName() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string file_name = 6 [(.buffers.gmx) = "data"];</code>
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fileName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string file_name = 6 [(.buffers.gmx) = "data"];</code>
       */
      public com.google.protobuf.ByteString
          getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string file_name = 6 [(.buffers.gmx) = "data"];</code>
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        fileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string file_name = 6 [(.buffers.gmx) = "data"];</code>
       */
      public Builder clearFileName() {
        bitField0_ = (bitField0_ & ~0x00000020);
        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string file_name = 6 [(.buffers.gmx) = "data"];</code>
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        fileName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fileExtension_ = "";
      /**
       * <code>optional string file_extension = 7 [(.buffers.gmx) = "extension"];</code>
       */
      public boolean hasFileExtension() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string file_extension = 7 [(.buffers.gmx) = "extension"];</code>
       */
      public java.lang.String getFileExtension() {
        java.lang.Object ref = fileExtension_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fileExtension_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string file_extension = 7 [(.buffers.gmx) = "extension"];</code>
       */
      public com.google.protobuf.ByteString
          getFileExtensionBytes() {
        java.lang.Object ref = fileExtension_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileExtension_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string file_extension = 7 [(.buffers.gmx) = "extension"];</code>
       */
      public Builder setFileExtension(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        fileExtension_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string file_extension = 7 [(.buffers.gmx) = "extension"];</code>
       */
      public Builder clearFileExtension() {
        bitField0_ = (bitField0_ & ~0x00000040);
        fileExtension_ = getDefaultInstance().getFileExtension();
        onChanged();
        return this;
      }
      /**
       * <code>optional string file_extension = 7 [(.buffers.gmx) = "extension"];</code>
       */
      public Builder setFileExtensionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        fileExtension_ = value;
        onChanged();
        return this;
      }

      private int kind_ = 0;
      /**
       * <code>optional .buffers.resources.Sound.Kind kind = 8;</code>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .buffers.resources.Sound.Kind kind = 8;</code>
       */
      public buffers.resources.SoundOuterClass.Sound.Kind getKind() {
        buffers.resources.SoundOuterClass.Sound.Kind result = buffers.resources.SoundOuterClass.Sound.Kind.valueOf(kind_);
        return result == null ? buffers.resources.SoundOuterClass.Sound.Kind.NORMAL : result;
      }
      /**
       * <code>optional .buffers.resources.Sound.Kind kind = 8;</code>
       */
      public Builder setKind(buffers.resources.SoundOuterClass.Sound.Kind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000080;
        kind_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .buffers.resources.Sound.Kind kind = 8;</code>
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000080);
        kind_ = 0;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>optional .buffers.resources.Sound.Type type = 9 [(.buffers.gmx) = "types/type"];</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .buffers.resources.Sound.Type type = 9 [(.buffers.gmx) = "types/type"];</code>
       */
      public buffers.resources.SoundOuterClass.Sound.Type getType() {
        buffers.resources.SoundOuterClass.Sound.Type result = buffers.resources.SoundOuterClass.Sound.Type.valueOf(type_);
        return result == null ? buffers.resources.SoundOuterClass.Sound.Type.MONO : result;
      }
      /**
       * <code>optional .buffers.resources.Sound.Type type = 9 [(.buffers.gmx) = "types/type"];</code>
       */
      public Builder setType(buffers.resources.SoundOuterClass.Sound.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .buffers.resources.Sound.Type type = 9 [(.buffers.gmx) = "types/type"];</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object data_ = "";
      /**
       * <code>optional string data = 10 [(.buffers.gmx) = "origname", (.buffers.file_path) = true];</code>
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string data = 10 [(.buffers.gmx) = "origname", (.buffers.file_path) = true];</code>
       */
      public java.lang.String getData() {
        java.lang.Object ref = data_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            data_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string data = 10 [(.buffers.gmx) = "origname", (.buffers.file_path) = true];</code>
       */
      public com.google.protobuf.ByteString
          getDataBytes() {
        java.lang.Object ref = data_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          data_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string data = 10 [(.buffers.gmx) = "origname", (.buffers.file_path) = true];</code>
       */
      public Builder setData(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string data = 10 [(.buffers.gmx) = "origname", (.buffers.file_path) = true];</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000200);
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }
      /**
       * <code>optional string data = 10 [(.buffers.gmx) = "origname", (.buffers.file_path) = true];</code>
       */
      public Builder setDataBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        data_ = value;
        onChanged();
        return this;
      }

      private int effects_ ;
      /**
       * <code>optional int32 effects = 11;</code>
       */
      public boolean hasEffects() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 effects = 11;</code>
       */
      public int getEffects() {
        return effects_;
      }
      /**
       * <code>optional int32 effects = 11;</code>
       */
      public Builder setEffects(int value) {
        bitField0_ |= 0x00000400;
        effects_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 effects = 11;</code>
       */
      public Builder clearEffects() {
        bitField0_ = (bitField0_ & ~0x00000400);
        effects_ = 0;
        onChanged();
        return this;
      }

      private int bitRate_ ;
      /**
       * <code>optional uint32 bit_rate = 12 [(.buffers.gmx) = "bitRates/bitRate"];</code>
       */
      public boolean hasBitRate() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 bit_rate = 12 [(.buffers.gmx) = "bitRates/bitRate"];</code>
       */
      public int getBitRate() {
        return bitRate_;
      }
      /**
       * <code>optional uint32 bit_rate = 12 [(.buffers.gmx) = "bitRates/bitRate"];</code>
       */
      public Builder setBitRate(int value) {
        bitField0_ |= 0x00000800;
        bitRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 bit_rate = 12 [(.buffers.gmx) = "bitRates/bitRate"];</code>
       */
      public Builder clearBitRate() {
        bitField0_ = (bitField0_ & ~0x00000800);
        bitRate_ = 0;
        onChanged();
        return this;
      }

      private int sampleRate_ ;
      /**
       * <code>optional uint32 sample_rate = 13 [(.buffers.gmx) = "sampleRates/sampleRate"];</code>
       */
      public boolean hasSampleRate() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 sample_rate = 13 [(.buffers.gmx) = "sampleRates/sampleRate"];</code>
       */
      public int getSampleRate() {
        return sampleRate_;
      }
      /**
       * <code>optional uint32 sample_rate = 13 [(.buffers.gmx) = "sampleRates/sampleRate"];</code>
       */
      public Builder setSampleRate(int value) {
        bitField0_ |= 0x00001000;
        sampleRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sample_rate = 13 [(.buffers.gmx) = "sampleRates/sampleRate"];</code>
       */
      public Builder clearSampleRate() {
        bitField0_ = (bitField0_ & ~0x00001000);
        sampleRate_ = 0;
        onChanged();
        return this;
      }

      private int bitDepth_ ;
      /**
       * <code>optional uint32 bit_depth = 14 [(.buffers.gmx) = "bitDepths/bitDepth"];</code>
       */
      public boolean hasBitDepth() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 bit_depth = 14 [(.buffers.gmx) = "bitDepths/bitDepth"];</code>
       */
      public int getBitDepth() {
        return bitDepth_;
      }
      /**
       * <code>optional uint32 bit_depth = 14 [(.buffers.gmx) = "bitDepths/bitDepth"];</code>
       */
      public Builder setBitDepth(int value) {
        bitField0_ |= 0x00002000;
        bitDepth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 bit_depth = 14 [(.buffers.gmx) = "bitDepths/bitDepth"];</code>
       */
      public Builder clearBitDepth() {
        bitField0_ = (bitField0_ & ~0x00002000);
        bitDepth_ = 0;
        onChanged();
        return this;
      }

      private boolean compressed_ ;
      /**
       * <code>optional bool compressed = 15;</code>
       */
      public boolean hasCompressed() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional bool compressed = 15;</code>
       */
      public boolean getCompressed() {
        return compressed_;
      }
      /**
       * <code>optional bool compressed = 15;</code>
       */
      public Builder setCompressed(boolean value) {
        bitField0_ |= 0x00004000;
        compressed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool compressed = 15;</code>
       */
      public Builder clearCompressed() {
        bitField0_ = (bitField0_ & ~0x00004000);
        compressed_ = false;
        onChanged();
        return this;
      }

      private boolean streamed_ ;
      /**
       * <code>optional bool streamed = 16;</code>
       */
      public boolean hasStreamed() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional bool streamed = 16;</code>
       */
      public boolean getStreamed() {
        return streamed_;
      }
      /**
       * <code>optional bool streamed = 16;</code>
       */
      public Builder setStreamed(boolean value) {
        bitField0_ |= 0x00008000;
        streamed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool streamed = 16;</code>
       */
      public Builder clearStreamed() {
        bitField0_ = (bitField0_ & ~0x00008000);
        streamed_ = false;
        onChanged();
        return this;
      }

      private boolean uncompressOnLoad_ ;
      /**
       * <code>optional bool uncompress_on_load = 17 [(.buffers.gmx) = "uncompressOnLoad"];</code>
       */
      public boolean hasUncompressOnLoad() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional bool uncompress_on_load = 17 [(.buffers.gmx) = "uncompressOnLoad"];</code>
       */
      public boolean getUncompressOnLoad() {
        return uncompressOnLoad_;
      }
      /**
       * <code>optional bool uncompress_on_load = 17 [(.buffers.gmx) = "uncompressOnLoad"];</code>
       */
      public Builder setUncompressOnLoad(boolean value) {
        bitField0_ |= 0x00010000;
        uncompressOnLoad_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool uncompress_on_load = 17 [(.buffers.gmx) = "uncompressOnLoad"];</code>
       */
      public Builder clearUncompressOnLoad() {
        bitField0_ = (bitField0_ & ~0x00010000);
        uncompressOnLoad_ = false;
        onChanged();
        return this;
      }

      private int audioGroup_ ;
      /**
       * <code>optional int32 audio_group = 18 [(.buffers.gmx) = "audioGroup"];</code>
       */
      public boolean hasAudioGroup() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 audio_group = 18 [(.buffers.gmx) = "audioGroup"];</code>
       */
      public int getAudioGroup() {
        return audioGroup_;
      }
      /**
       * <code>optional int32 audio_group = 18 [(.buffers.gmx) = "audioGroup"];</code>
       */
      public Builder setAudioGroup(int value) {
        bitField0_ |= 0x00020000;
        audioGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 audio_group = 18 [(.buffers.gmx) = "audioGroup"];</code>
       */
      public Builder clearAudioGroup() {
        bitField0_ = (bitField0_ & ~0x00020000);
        audioGroup_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:buffers.resources.Sound)
    }

    // @@protoc_insertion_point(class_scope:buffers.resources.Sound)
    private static final buffers.resources.SoundOuterClass.Sound DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new buffers.resources.SoundOuterClass.Sound();
    }

    public static buffers.resources.SoundOuterClass.Sound getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Sound>
        PARSER = new com.google.protobuf.AbstractParser<Sound>() {
      public Sound parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Sound(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Sound> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Sound> getParserForType() {
      return PARSER;
    }

    public buffers.resources.SoundOuterClass.Sound getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buffers_resources_Sound_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buffers_resources_Sound_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025resources/Sound.proto\022\021buffers.resourc" +
      "es\032\roptions.proto\"\334\005\n\005Sound\022\014\n\004name\030\001 \001(" +
      "\t\022\036\n\002id\030\002 \001(\005B\022\202\265\030\016GMX_DEPRECATED\022\017\n\007pre" +
      "load\030\003 \001(\010\022\013\n\003pan\030\004 \001(\001\022!\n\006volume\030\005 \001(\001B" +
      "\021\202\265\030\rvolume/volume\022\033\n\tfile_name\030\006 \001(\tB\010\202" +
      "\265\030\004data\022%\n\016file_extension\030\007 \001(\tB\r\202\265\030\text" +
      "ension\022+\n\004kind\030\010 \001(\0162\035.buffers.resources" +
      ".Sound.Kind\022;\n\004type\030\t \001(\0162\035.buffers.reso" +
      "urces.Sound.TypeB\016\202\265\030\ntypes/type\022\036\n\004data" +
      "\030\n \001(\tB\020\202\265\030\010origname\230\265\030\001\022\017\n\007effects\030\013 \001(" +
      "\005\022&\n\010bit_rate\030\014 \001(\rB\024\202\265\030\020bitRates/bitRat" +
      "e\022/\n\013sample_rate\030\r \001(\rB\032\202\265\030\026sampleRates/" +
      "sampleRate\022)\n\tbit_depth\030\016 \001(\rB\026\202\265\030\022bitDe" +
      "pths/bitDepth\022\022\n\ncompressed\030\017 \001(\010\022\020\n\010str" +
      "eamed\030\020 \001(\010\0220\n\022uncompress_on_load\030\021 \001(\010B" +
      "\024\202\265\030\020uncompressOnLoad\022#\n\013audio_group\030\022 \001" +
      "(\005B\016\202\265\030\naudioGroup\"V\n\004Kind\022\n\n\006NORMAL\020\000\022\024" +
      "\n\020BACKGROUND_MUSIC\020\001\022\025\n\021THREE_DIMENSIONA" +
      "L\020\002\022\025\n\021MULTIMEDIA_PLAYER\020\003\",\n\004Type\022\010\n\004MO" +
      "NO\020\000\022\n\n\006STEREO\020\001\022\016\n\nPOSITIONAL\020\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          buffers.Options.getDescriptor(),
        }, assigner);
    internal_static_buffers_resources_Sound_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_buffers_resources_Sound_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buffers_resources_Sound_descriptor,
        new java.lang.String[] { "Name", "Id", "Preload", "Pan", "Volume", "FileName", "FileExtension", "Kind", "Type", "Data", "Effects", "BitRate", "SampleRate", "BitDepth", "Compressed", "Streamed", "UncompressOnLoad", "AudioGroup", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(buffers.Options.filePath);
    registry.add(buffers.Options.gmx);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    buffers.Options.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
