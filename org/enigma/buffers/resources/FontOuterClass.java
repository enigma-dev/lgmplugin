// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: resources/Font.proto

package buffers.resources;

public final class FontOuterClass {
  private FontOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FontOrBuilder extends
      // @@protoc_insertion_point(interface_extends:buffers.resources.Font)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    int getId();

    /**
     * <code>optional string font_name = 3 [(.buffers.gmx) = "name"];</code>
     */
    boolean hasFontName();
    /**
     * <code>optional string font_name = 3 [(.buffers.gmx) = "name"];</code>
     */
    java.lang.String getFontName();
    /**
     * <code>optional string font_name = 3 [(.buffers.gmx) = "name"];</code>
     */
    com.google.protobuf.ByteString
        getFontNameBytes();

    /**
     * <code>optional int32 size = 4;</code>
     */
    boolean hasSize();
    /**
     * <code>optional int32 size = 4;</code>
     */
    int getSize();

    /**
     * <code>optional bool bold = 5;</code>
     */
    boolean hasBold();
    /**
     * <code>optional bool bold = 5;</code>
     */
    boolean getBold();

    /**
     * <code>optional bool italic = 6;</code>
     */
    boolean hasItalic();
    /**
     * <code>optional bool italic = 6;</code>
     */
    boolean getItalic();

    /**
     * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
     */
    java.util.List<buffers.resources.FontOuterClass.Font.Range> 
        getRangesList();
    /**
     * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
     */
    buffers.resources.FontOuterClass.Font.Range getRanges(int index);
    /**
     * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
     */
    int getRangesCount();
    /**
     * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
     */
    java.util.List<? extends buffers.resources.FontOuterClass.Font.RangeOrBuilder> 
        getRangesOrBuilderList();
    /**
     * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
     */
    buffers.resources.FontOuterClass.Font.RangeOrBuilder getRangesOrBuilder(
        int index);

    /**
     * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
     */
    java.util.List<buffers.resources.FontOuterClass.Font.Glyph> 
        getGlyphsList();
    /**
     * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
     */
    buffers.resources.FontOuterClass.Font.Glyph getGlyphs(int index);
    /**
     * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
     */
    int getGlyphsCount();
    /**
     * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
     */
    java.util.List<? extends buffers.resources.FontOuterClass.Font.GlyphOrBuilder> 
        getGlyphsOrBuilderList();
    /**
     * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
     */
    buffers.resources.FontOuterClass.Font.GlyphOrBuilder getGlyphsOrBuilder(
        int index);

    /**
     * <code>optional bool renderhq = 10;</code>
     */
    boolean hasRenderhq();
    /**
     * <code>optional bool renderhq = 10;</code>
     */
    boolean getRenderhq();

    /**
     * <code>optional uint32 charset = 11;</code>
     */
    boolean hasCharset();
    /**
     * <code>optional uint32 charset = 11;</code>
     */
    int getCharset();

    /**
     * <code>optional uint32 antialias = 12 [(.buffers.gmx) = "aa"];</code>
     */
    boolean hasAntialias();
    /**
     * <code>optional uint32 antialias = 12 [(.buffers.gmx) = "aa"];</code>
     */
    int getAntialias();

    /**
     * <code>optional bool include_ttf = 13 [(.buffers.gmx) = "includeTTF"];</code>
     */
    boolean hasIncludeTtf();
    /**
     * <code>optional bool include_ttf = 13 [(.buffers.gmx) = "includeTTF"];</code>
     */
    boolean getIncludeTtf();

    /**
     * <code>optional string ttf_file = 14 [(.buffers.gmx) = "TTFName"];</code>
     */
    boolean hasTtfFile();
    /**
     * <code>optional string ttf_file = 14 [(.buffers.gmx) = "TTFName"];</code>
     */
    java.lang.String getTtfFile();
    /**
     * <code>optional string ttf_file = 14 [(.buffers.gmx) = "TTFName"];</code>
     */
    com.google.protobuf.ByteString
        getTtfFileBytes();

    /**
     * <code>optional int32 texture_group = 15 [(.buffers.gmx) = "texgroups/texgroup0"];</code>
     */
    boolean hasTextureGroup();
    /**
     * <code>optional int32 texture_group = 15 [(.buffers.gmx) = "texgroups/texgroup0"];</code>
     */
    int getTextureGroup();

    /**
     * <code>optional string image = 16;</code>
     */
    boolean hasImage();
    /**
     * <code>optional string image = 16;</code>
     */
    java.lang.String getImage();
    /**
     * <code>optional string image = 16;</code>
     */
    com.google.protobuf.ByteString
        getImageBytes();
  }
  /**
   * Protobuf type {@code buffers.resources.Font}
   */
  public  static final class Font extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:buffers.resources.Font)
      FontOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Font.newBuilder() to construct.
    private Font(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Font() {
      name_ = "";
      id_ = 0;
      fontName_ = "";
      size_ = 0;
      bold_ = false;
      italic_ = false;
      ranges_ = java.util.Collections.emptyList();
      glyphs_ = java.util.Collections.emptyList();
      renderhq_ = false;
      charset_ = 0;
      antialias_ = 0;
      includeTtf_ = false;
      ttfFile_ = "";
      textureGroup_ = 0;
      image_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Font(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              fontName_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              size_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              bold_ = input.readBool();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              italic_ = input.readBool();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                ranges_ = new java.util.ArrayList<buffers.resources.FontOuterClass.Font.Range>();
                mutable_bitField0_ |= 0x00000040;
              }
              ranges_.add(
                  input.readMessage(buffers.resources.FontOuterClass.Font.Range.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                glyphs_ = new java.util.ArrayList<buffers.resources.FontOuterClass.Font.Glyph>();
                mutable_bitField0_ |= 0x00000080;
              }
              glyphs_.add(
                  input.readMessage(buffers.resources.FontOuterClass.Font.Glyph.PARSER, extensionRegistry));
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              renderhq_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              charset_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              antialias_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000200;
              includeTtf_ = input.readBool();
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              ttfFile_ = bs;
              break;
            }
            case 120: {
              bitField0_ |= 0x00000800;
              textureGroup_ = input.readInt32();
              break;
            }
            case 130: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00001000;
              image_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          ranges_ = java.util.Collections.unmodifiableList(ranges_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          glyphs_ = java.util.Collections.unmodifiableList(glyphs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              buffers.resources.FontOuterClass.Font.class, buffers.resources.FontOuterClass.Font.Builder.class);
    }

    public interface GlyphOrBuilder extends
        // @@protoc_insertion_point(interface_extends:buffers.resources.Font.Glyph)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 character = 1;</code>
       */
      boolean hasCharacter();
      /**
       * <code>optional uint32 character = 1;</code>
       */
      int getCharacter();

      /**
       * <code>optional uint32 x = 2;</code>
       */
      boolean hasX();
      /**
       * <code>optional uint32 x = 2;</code>
       */
      int getX();

      /**
       * <code>optional uint32 y = 3;</code>
       */
      boolean hasY();
      /**
       * <code>optional uint32 y = 3;</code>
       */
      int getY();

      /**
       * <code>optional uint32 width = 4 [(.buffers.gmx) = "w"];</code>
       */
      boolean hasWidth();
      /**
       * <code>optional uint32 width = 4 [(.buffers.gmx) = "w"];</code>
       */
      int getWidth();

      /**
       * <code>optional uint32 height = 5 [(.buffers.gmx) = "h"];</code>
       */
      boolean hasHeight();
      /**
       * <code>optional uint32 height = 5 [(.buffers.gmx) = "h"];</code>
       */
      int getHeight();

      /**
       * <code>optional int32 shift = 6;</code>
       */
      boolean hasShift();
      /**
       * <code>optional int32 shift = 6;</code>
       */
      int getShift();

      /**
       * <code>optional int32 offset = 7;</code>
       */
      boolean hasOffset();
      /**
       * <code>optional int32 offset = 7;</code>
       */
      int getOffset();
    }
    /**
     * Protobuf type {@code buffers.resources.Font.Glyph}
     */
    public  static final class Glyph extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:buffers.resources.Font.Glyph)
        GlyphOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Glyph.newBuilder() to construct.
      private Glyph(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Glyph() {
        character_ = 0;
        x_ = 0;
        y_ = 0;
        width_ = 0;
        height_ = 0;
        shift_ = 0;
        offset_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Glyph(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                character_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                x_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                y_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                width_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                height_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                shift_ = input.readInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                offset_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_Glyph_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_Glyph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                buffers.resources.FontOuterClass.Font.Glyph.class, buffers.resources.FontOuterClass.Font.Glyph.Builder.class);
      }

      private int bitField0_;
      public static final int CHARACTER_FIELD_NUMBER = 1;
      private int character_;
      /**
       * <code>optional uint32 character = 1;</code>
       */
      public boolean hasCharacter() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 character = 1;</code>
       */
      public int getCharacter() {
        return character_;
      }

      public static final int X_FIELD_NUMBER = 2;
      private int x_;
      /**
       * <code>optional uint32 x = 2;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 x = 2;</code>
       */
      public int getX() {
        return x_;
      }

      public static final int Y_FIELD_NUMBER = 3;
      private int y_;
      /**
       * <code>optional uint32 y = 3;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 y = 3;</code>
       */
      public int getY() {
        return y_;
      }

      public static final int WIDTH_FIELD_NUMBER = 4;
      private int width_;
      /**
       * <code>optional uint32 width = 4 [(.buffers.gmx) = "w"];</code>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 width = 4 [(.buffers.gmx) = "w"];</code>
       */
      public int getWidth() {
        return width_;
      }

      public static final int HEIGHT_FIELD_NUMBER = 5;
      private int height_;
      /**
       * <code>optional uint32 height = 5 [(.buffers.gmx) = "h"];</code>
       */
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 height = 5 [(.buffers.gmx) = "h"];</code>
       */
      public int getHeight() {
        return height_;
      }

      public static final int SHIFT_FIELD_NUMBER = 6;
      private int shift_;
      /**
       * <code>optional int32 shift = 6;</code>
       */
      public boolean hasShift() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 shift = 6;</code>
       */
      public int getShift() {
        return shift_;
      }

      public static final int OFFSET_FIELD_NUMBER = 7;
      private int offset_;
      /**
       * <code>optional int32 offset = 7;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 offset = 7;</code>
       */
      public int getOffset() {
        return offset_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, character_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, x_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, y_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, width_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, height_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(6, shift_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeInt32(7, offset_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, character_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, x_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, y_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, width_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, height_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(6, shift_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(7, offset_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof buffers.resources.FontOuterClass.Font.Glyph)) {
          return super.equals(obj);
        }
        buffers.resources.FontOuterClass.Font.Glyph other = (buffers.resources.FontOuterClass.Font.Glyph) obj;

        boolean result = true;
        result = result && (hasCharacter() == other.hasCharacter());
        if (hasCharacter()) {
          result = result && (getCharacter()
              == other.getCharacter());
        }
        result = result && (hasX() == other.hasX());
        if (hasX()) {
          result = result && (getX()
              == other.getX());
        }
        result = result && (hasY() == other.hasY());
        if (hasY()) {
          result = result && (getY()
              == other.getY());
        }
        result = result && (hasWidth() == other.hasWidth());
        if (hasWidth()) {
          result = result && (getWidth()
              == other.getWidth());
        }
        result = result && (hasHeight() == other.hasHeight());
        if (hasHeight()) {
          result = result && (getHeight()
              == other.getHeight());
        }
        result = result && (hasShift() == other.hasShift());
        if (hasShift()) {
          result = result && (getShift()
              == other.getShift());
        }
        result = result && (hasOffset() == other.hasOffset());
        if (hasOffset()) {
          result = result && (getOffset()
              == other.getOffset());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasCharacter()) {
          hash = (37 * hash) + CHARACTER_FIELD_NUMBER;
          hash = (53 * hash) + getCharacter();
        }
        if (hasX()) {
          hash = (37 * hash) + X_FIELD_NUMBER;
          hash = (53 * hash) + getX();
        }
        if (hasY()) {
          hash = (37 * hash) + Y_FIELD_NUMBER;
          hash = (53 * hash) + getY();
        }
        if (hasWidth()) {
          hash = (37 * hash) + WIDTH_FIELD_NUMBER;
          hash = (53 * hash) + getWidth();
        }
        if (hasHeight()) {
          hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
          hash = (53 * hash) + getHeight();
        }
        if (hasShift()) {
          hash = (37 * hash) + SHIFT_FIELD_NUMBER;
          hash = (53 * hash) + getShift();
        }
        if (hasOffset()) {
          hash = (37 * hash) + OFFSET_FIELD_NUMBER;
          hash = (53 * hash) + getOffset();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static buffers.resources.FontOuterClass.Font.Glyph parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static buffers.resources.FontOuterClass.Font.Glyph parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static buffers.resources.FontOuterClass.Font.Glyph parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static buffers.resources.FontOuterClass.Font.Glyph parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static buffers.resources.FontOuterClass.Font.Glyph parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static buffers.resources.FontOuterClass.Font.Glyph parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static buffers.resources.FontOuterClass.Font.Glyph parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static buffers.resources.FontOuterClass.Font.Glyph parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static buffers.resources.FontOuterClass.Font.Glyph parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static buffers.resources.FontOuterClass.Font.Glyph parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static buffers.resources.FontOuterClass.Font.Glyph parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static buffers.resources.FontOuterClass.Font.Glyph parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(buffers.resources.FontOuterClass.Font.Glyph prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code buffers.resources.Font.Glyph}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:buffers.resources.Font.Glyph)
          buffers.resources.FontOuterClass.Font.GlyphOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_Glyph_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_Glyph_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  buffers.resources.FontOuterClass.Font.Glyph.class, buffers.resources.FontOuterClass.Font.Glyph.Builder.class);
        }

        // Construct using buffers.resources.FontOuterClass.Font.Glyph.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          character_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          x_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          y_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          width_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          height_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          shift_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          offset_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_Glyph_descriptor;
        }

        public buffers.resources.FontOuterClass.Font.Glyph getDefaultInstanceForType() {
          return buffers.resources.FontOuterClass.Font.Glyph.getDefaultInstance();
        }

        public buffers.resources.FontOuterClass.Font.Glyph build() {
          buffers.resources.FontOuterClass.Font.Glyph result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public buffers.resources.FontOuterClass.Font.Glyph buildPartial() {
          buffers.resources.FontOuterClass.Font.Glyph result = new buffers.resources.FontOuterClass.Font.Glyph(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.character_ = character_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.x_ = x_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.y_ = y_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.width_ = width_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.height_ = height_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.shift_ = shift_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.offset_ = offset_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof buffers.resources.FontOuterClass.Font.Glyph) {
            return mergeFrom((buffers.resources.FontOuterClass.Font.Glyph)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(buffers.resources.FontOuterClass.Font.Glyph other) {
          if (other == buffers.resources.FontOuterClass.Font.Glyph.getDefaultInstance()) return this;
          if (other.hasCharacter()) {
            setCharacter(other.getCharacter());
          }
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasWidth()) {
            setWidth(other.getWidth());
          }
          if (other.hasHeight()) {
            setHeight(other.getHeight());
          }
          if (other.hasShift()) {
            setShift(other.getShift());
          }
          if (other.hasOffset()) {
            setOffset(other.getOffset());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          buffers.resources.FontOuterClass.Font.Glyph parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (buffers.resources.FontOuterClass.Font.Glyph) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int character_ ;
        /**
         * <code>optional uint32 character = 1;</code>
         */
        public boolean hasCharacter() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 character = 1;</code>
         */
        public int getCharacter() {
          return character_;
        }
        /**
         * <code>optional uint32 character = 1;</code>
         */
        public Builder setCharacter(int value) {
          bitField0_ |= 0x00000001;
          character_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 character = 1;</code>
         */
        public Builder clearCharacter() {
          bitField0_ = (bitField0_ & ~0x00000001);
          character_ = 0;
          onChanged();
          return this;
        }

        private int x_ ;
        /**
         * <code>optional uint32 x = 2;</code>
         */
        public boolean hasX() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 x = 2;</code>
         */
        public int getX() {
          return x_;
        }
        /**
         * <code>optional uint32 x = 2;</code>
         */
        public Builder setX(int value) {
          bitField0_ |= 0x00000002;
          x_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 x = 2;</code>
         */
        public Builder clearX() {
          bitField0_ = (bitField0_ & ~0x00000002);
          x_ = 0;
          onChanged();
          return this;
        }

        private int y_ ;
        /**
         * <code>optional uint32 y = 3;</code>
         */
        public boolean hasY() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 y = 3;</code>
         */
        public int getY() {
          return y_;
        }
        /**
         * <code>optional uint32 y = 3;</code>
         */
        public Builder setY(int value) {
          bitField0_ |= 0x00000004;
          y_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 y = 3;</code>
         */
        public Builder clearY() {
          bitField0_ = (bitField0_ & ~0x00000004);
          y_ = 0;
          onChanged();
          return this;
        }

        private int width_ ;
        /**
         * <code>optional uint32 width = 4 [(.buffers.gmx) = "w"];</code>
         */
        public boolean hasWidth() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 width = 4 [(.buffers.gmx) = "w"];</code>
         */
        public int getWidth() {
          return width_;
        }
        /**
         * <code>optional uint32 width = 4 [(.buffers.gmx) = "w"];</code>
         */
        public Builder setWidth(int value) {
          bitField0_ |= 0x00000008;
          width_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 width = 4 [(.buffers.gmx) = "w"];</code>
         */
        public Builder clearWidth() {
          bitField0_ = (bitField0_ & ~0x00000008);
          width_ = 0;
          onChanged();
          return this;
        }

        private int height_ ;
        /**
         * <code>optional uint32 height = 5 [(.buffers.gmx) = "h"];</code>
         */
        public boolean hasHeight() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 height = 5 [(.buffers.gmx) = "h"];</code>
         */
        public int getHeight() {
          return height_;
        }
        /**
         * <code>optional uint32 height = 5 [(.buffers.gmx) = "h"];</code>
         */
        public Builder setHeight(int value) {
          bitField0_ |= 0x00000010;
          height_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 height = 5 [(.buffers.gmx) = "h"];</code>
         */
        public Builder clearHeight() {
          bitField0_ = (bitField0_ & ~0x00000010);
          height_ = 0;
          onChanged();
          return this;
        }

        private int shift_ ;
        /**
         * <code>optional int32 shift = 6;</code>
         */
        public boolean hasShift() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional int32 shift = 6;</code>
         */
        public int getShift() {
          return shift_;
        }
        /**
         * <code>optional int32 shift = 6;</code>
         */
        public Builder setShift(int value) {
          bitField0_ |= 0x00000020;
          shift_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 shift = 6;</code>
         */
        public Builder clearShift() {
          bitField0_ = (bitField0_ & ~0x00000020);
          shift_ = 0;
          onChanged();
          return this;
        }

        private int offset_ ;
        /**
         * <code>optional int32 offset = 7;</code>
         */
        public boolean hasOffset() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional int32 offset = 7;</code>
         */
        public int getOffset() {
          return offset_;
        }
        /**
         * <code>optional int32 offset = 7;</code>
         */
        public Builder setOffset(int value) {
          bitField0_ |= 0x00000040;
          offset_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 offset = 7;</code>
         */
        public Builder clearOffset() {
          bitField0_ = (bitField0_ & ~0x00000040);
          offset_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:buffers.resources.Font.Glyph)
      }

      // @@protoc_insertion_point(class_scope:buffers.resources.Font.Glyph)
      private static final buffers.resources.FontOuterClass.Font.Glyph DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new buffers.resources.FontOuterClass.Font.Glyph();
      }

      public static buffers.resources.FontOuterClass.Font.Glyph getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Glyph>
          PARSER = new com.google.protobuf.AbstractParser<Glyph>() {
        public Glyph parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Glyph(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Glyph> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Glyph> getParserForType() {
        return PARSER;
      }

      public buffers.resources.FontOuterClass.Font.Glyph getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface RangeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:buffers.resources.Font.Range)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 min = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];</code>
       */
      boolean hasMin();
      /**
       * <code>optional int32 min = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];</code>
       */
      int getMin();

      /**
       * <code>optional int32 max = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];</code>
       */
      boolean hasMax();
      /**
       * <code>optional int32 max = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];</code>
       */
      int getMax();
    }
    /**
     * Protobuf type {@code buffers.resources.Font.Range}
     */
    public  static final class Range extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:buffers.resources.Font.Range)
        RangeOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Range.newBuilder() to construct.
      private Range(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Range() {
        min_ = 0;
        max_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Range(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                min_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                max_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_Range_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_Range_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                buffers.resources.FontOuterClass.Font.Range.class, buffers.resources.FontOuterClass.Font.Range.Builder.class);
      }

      private int bitField0_;
      public static final int MIN_FIELD_NUMBER = 1;
      private int min_;
      /**
       * <code>optional int32 min = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];</code>
       */
      public boolean hasMin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 min = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];</code>
       */
      public int getMin() {
        return min_;
      }

      public static final int MAX_FIELD_NUMBER = 2;
      private int max_;
      /**
       * <code>optional int32 max = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];</code>
       */
      public boolean hasMax() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 max = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];</code>
       */
      public int getMax() {
        return max_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, min_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, max_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, min_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, max_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof buffers.resources.FontOuterClass.Font.Range)) {
          return super.equals(obj);
        }
        buffers.resources.FontOuterClass.Font.Range other = (buffers.resources.FontOuterClass.Font.Range) obj;

        boolean result = true;
        result = result && (hasMin() == other.hasMin());
        if (hasMin()) {
          result = result && (getMin()
              == other.getMin());
        }
        result = result && (hasMax() == other.hasMax());
        if (hasMax()) {
          result = result && (getMax()
              == other.getMax());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMin()) {
          hash = (37 * hash) + MIN_FIELD_NUMBER;
          hash = (53 * hash) + getMin();
        }
        if (hasMax()) {
          hash = (37 * hash) + MAX_FIELD_NUMBER;
          hash = (53 * hash) + getMax();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static buffers.resources.FontOuterClass.Font.Range parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static buffers.resources.FontOuterClass.Font.Range parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static buffers.resources.FontOuterClass.Font.Range parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static buffers.resources.FontOuterClass.Font.Range parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static buffers.resources.FontOuterClass.Font.Range parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static buffers.resources.FontOuterClass.Font.Range parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static buffers.resources.FontOuterClass.Font.Range parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static buffers.resources.FontOuterClass.Font.Range parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static buffers.resources.FontOuterClass.Font.Range parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static buffers.resources.FontOuterClass.Font.Range parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static buffers.resources.FontOuterClass.Font.Range parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static buffers.resources.FontOuterClass.Font.Range parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(buffers.resources.FontOuterClass.Font.Range prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code buffers.resources.Font.Range}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:buffers.resources.Font.Range)
          buffers.resources.FontOuterClass.Font.RangeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_Range_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_Range_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  buffers.resources.FontOuterClass.Font.Range.class, buffers.resources.FontOuterClass.Font.Range.Builder.class);
        }

        // Construct using buffers.resources.FontOuterClass.Font.Range.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          min_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          max_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_Range_descriptor;
        }

        public buffers.resources.FontOuterClass.Font.Range getDefaultInstanceForType() {
          return buffers.resources.FontOuterClass.Font.Range.getDefaultInstance();
        }

        public buffers.resources.FontOuterClass.Font.Range build() {
          buffers.resources.FontOuterClass.Font.Range result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public buffers.resources.FontOuterClass.Font.Range buildPartial() {
          buffers.resources.FontOuterClass.Font.Range result = new buffers.resources.FontOuterClass.Font.Range(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.min_ = min_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.max_ = max_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof buffers.resources.FontOuterClass.Font.Range) {
            return mergeFrom((buffers.resources.FontOuterClass.Font.Range)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(buffers.resources.FontOuterClass.Font.Range other) {
          if (other == buffers.resources.FontOuterClass.Font.Range.getDefaultInstance()) return this;
          if (other.hasMin()) {
            setMin(other.getMin());
          }
          if (other.hasMax()) {
            setMax(other.getMax());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          buffers.resources.FontOuterClass.Font.Range parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (buffers.resources.FontOuterClass.Font.Range) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int min_ ;
        /**
         * <code>optional int32 min = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];</code>
         */
        public boolean hasMin() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 min = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];</code>
         */
        public int getMin() {
          return min_;
        }
        /**
         * <code>optional int32 min = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];</code>
         */
        public Builder setMin(int value) {
          bitField0_ |= 0x00000001;
          min_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 min = 1 [(.buffers.gmx) = "GMX_SPLIT/0"];</code>
         */
        public Builder clearMin() {
          bitField0_ = (bitField0_ & ~0x00000001);
          min_ = 0;
          onChanged();
          return this;
        }

        private int max_ ;
        /**
         * <code>optional int32 max = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];</code>
         */
        public boolean hasMax() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 max = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];</code>
         */
        public int getMax() {
          return max_;
        }
        /**
         * <code>optional int32 max = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];</code>
         */
        public Builder setMax(int value) {
          bitField0_ |= 0x00000002;
          max_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 max = 2 [(.buffers.gmx) = "GMX_SPLIT/1"];</code>
         */
        public Builder clearMax() {
          bitField0_ = (bitField0_ & ~0x00000002);
          max_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:buffers.resources.Font.Range)
      }

      // @@protoc_insertion_point(class_scope:buffers.resources.Font.Range)
      private static final buffers.resources.FontOuterClass.Font.Range DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new buffers.resources.FontOuterClass.Font.Range();
      }

      public static buffers.resources.FontOuterClass.Font.Range getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Range>
          PARSER = new com.google.protobuf.AbstractParser<Range>() {
        public Range parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Range(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Range> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Range> getParserForType() {
        return PARSER;
      }

      public buffers.resources.FontOuterClass.Font.Range getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
     */
    public int getId() {
      return id_;
    }

    public static final int FONT_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object fontName_;
    /**
     * <code>optional string font_name = 3 [(.buffers.gmx) = "name"];</code>
     */
    public boolean hasFontName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string font_name = 3 [(.buffers.gmx) = "name"];</code>
     */
    public java.lang.String getFontName() {
      java.lang.Object ref = fontName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fontName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string font_name = 3 [(.buffers.gmx) = "name"];</code>
     */
    public com.google.protobuf.ByteString
        getFontNameBytes() {
      java.lang.Object ref = fontName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fontName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIZE_FIELD_NUMBER = 4;
    private int size_;
    /**
     * <code>optional int32 size = 4;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 size = 4;</code>
     */
    public int getSize() {
      return size_;
    }

    public static final int BOLD_FIELD_NUMBER = 5;
    private boolean bold_;
    /**
     * <code>optional bool bold = 5;</code>
     */
    public boolean hasBold() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bool bold = 5;</code>
     */
    public boolean getBold() {
      return bold_;
    }

    public static final int ITALIC_FIELD_NUMBER = 6;
    private boolean italic_;
    /**
     * <code>optional bool italic = 6;</code>
     */
    public boolean hasItalic() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool italic = 6;</code>
     */
    public boolean getItalic() {
      return italic_;
    }

    public static final int RANGES_FIELD_NUMBER = 7;
    private java.util.List<buffers.resources.FontOuterClass.Font.Range> ranges_;
    /**
     * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
     */
    public java.util.List<buffers.resources.FontOuterClass.Font.Range> getRangesList() {
      return ranges_;
    }
    /**
     * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
     */
    public java.util.List<? extends buffers.resources.FontOuterClass.Font.RangeOrBuilder> 
        getRangesOrBuilderList() {
      return ranges_;
    }
    /**
     * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
     */
    public int getRangesCount() {
      return ranges_.size();
    }
    /**
     * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
     */
    public buffers.resources.FontOuterClass.Font.Range getRanges(int index) {
      return ranges_.get(index);
    }
    /**
     * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
     */
    public buffers.resources.FontOuterClass.Font.RangeOrBuilder getRangesOrBuilder(
        int index) {
      return ranges_.get(index);
    }

    public static final int GLYPHS_FIELD_NUMBER = 8;
    private java.util.List<buffers.resources.FontOuterClass.Font.Glyph> glyphs_;
    /**
     * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
     */
    public java.util.List<buffers.resources.FontOuterClass.Font.Glyph> getGlyphsList() {
      return glyphs_;
    }
    /**
     * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
     */
    public java.util.List<? extends buffers.resources.FontOuterClass.Font.GlyphOrBuilder> 
        getGlyphsOrBuilderList() {
      return glyphs_;
    }
    /**
     * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
     */
    public int getGlyphsCount() {
      return glyphs_.size();
    }
    /**
     * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
     */
    public buffers.resources.FontOuterClass.Font.Glyph getGlyphs(int index) {
      return glyphs_.get(index);
    }
    /**
     * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
     */
    public buffers.resources.FontOuterClass.Font.GlyphOrBuilder getGlyphsOrBuilder(
        int index) {
      return glyphs_.get(index);
    }

    public static final int RENDERHQ_FIELD_NUMBER = 10;
    private boolean renderhq_;
    /**
     * <code>optional bool renderhq = 10;</code>
     */
    public boolean hasRenderhq() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool renderhq = 10;</code>
     */
    public boolean getRenderhq() {
      return renderhq_;
    }

    public static final int CHARSET_FIELD_NUMBER = 11;
    private int charset_;
    /**
     * <code>optional uint32 charset = 11;</code>
     */
    public boolean hasCharset() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 charset = 11;</code>
     */
    public int getCharset() {
      return charset_;
    }

    public static final int ANTIALIAS_FIELD_NUMBER = 12;
    private int antialias_;
    /**
     * <code>optional uint32 antialias = 12 [(.buffers.gmx) = "aa"];</code>
     */
    public boolean hasAntialias() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 antialias = 12 [(.buffers.gmx) = "aa"];</code>
     */
    public int getAntialias() {
      return antialias_;
    }

    public static final int INCLUDE_TTF_FIELD_NUMBER = 13;
    private boolean includeTtf_;
    /**
     * <code>optional bool include_ttf = 13 [(.buffers.gmx) = "includeTTF"];</code>
     */
    public boolean hasIncludeTtf() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional bool include_ttf = 13 [(.buffers.gmx) = "includeTTF"];</code>
     */
    public boolean getIncludeTtf() {
      return includeTtf_;
    }

    public static final int TTF_FILE_FIELD_NUMBER = 14;
    private volatile java.lang.Object ttfFile_;
    /**
     * <code>optional string ttf_file = 14 [(.buffers.gmx) = "TTFName"];</code>
     */
    public boolean hasTtfFile() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string ttf_file = 14 [(.buffers.gmx) = "TTFName"];</code>
     */
    public java.lang.String getTtfFile() {
      java.lang.Object ref = ttfFile_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ttfFile_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ttf_file = 14 [(.buffers.gmx) = "TTFName"];</code>
     */
    public com.google.protobuf.ByteString
        getTtfFileBytes() {
      java.lang.Object ref = ttfFile_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ttfFile_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEXTURE_GROUP_FIELD_NUMBER = 15;
    private int textureGroup_;
    /**
     * <code>optional int32 texture_group = 15 [(.buffers.gmx) = "texgroups/texgroup0"];</code>
     */
    public boolean hasTextureGroup() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 texture_group = 15 [(.buffers.gmx) = "texgroups/texgroup0"];</code>
     */
    public int getTextureGroup() {
      return textureGroup_;
    }

    public static final int IMAGE_FIELD_NUMBER = 16;
    private volatile java.lang.Object image_;
    /**
     * <code>optional string image = 16;</code>
     */
    public boolean hasImage() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string image = 16;</code>
     */
    public java.lang.String getImage() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          image_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string image = 16;</code>
     */
    public com.google.protobuf.ByteString
        getImageBytes() {
      java.lang.Object ref = image_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        image_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, fontName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, size_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, bold_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(6, italic_);
      }
      for (int i = 0; i < ranges_.size(); i++) {
        output.writeMessage(7, ranges_.get(i));
      }
      for (int i = 0; i < glyphs_.size(); i++) {
        output.writeMessage(8, glyphs_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(10, renderhq_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(11, charset_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(12, antialias_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBool(13, includeTtf_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 14, ttfFile_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(15, textureGroup_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, image_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, fontName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, size_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, bold_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, italic_);
      }
      for (int i = 0; i < ranges_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, ranges_.get(i));
      }
      for (int i = 0; i < glyphs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, glyphs_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, renderhq_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, charset_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, antialias_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, includeTtf_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, ttfFile_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, textureGroup_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, image_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof buffers.resources.FontOuterClass.Font)) {
        return super.equals(obj);
      }
      buffers.resources.FontOuterClass.Font other = (buffers.resources.FontOuterClass.Font) obj;

      boolean result = true;
      result = result && (hasName() == other.hasName());
      if (hasName()) {
        result = result && getName()
            .equals(other.getName());
      }
      result = result && (hasId() == other.hasId());
      if (hasId()) {
        result = result && (getId()
            == other.getId());
      }
      result = result && (hasFontName() == other.hasFontName());
      if (hasFontName()) {
        result = result && getFontName()
            .equals(other.getFontName());
      }
      result = result && (hasSize() == other.hasSize());
      if (hasSize()) {
        result = result && (getSize()
            == other.getSize());
      }
      result = result && (hasBold() == other.hasBold());
      if (hasBold()) {
        result = result && (getBold()
            == other.getBold());
      }
      result = result && (hasItalic() == other.hasItalic());
      if (hasItalic()) {
        result = result && (getItalic()
            == other.getItalic());
      }
      result = result && getRangesList()
          .equals(other.getRangesList());
      result = result && getGlyphsList()
          .equals(other.getGlyphsList());
      result = result && (hasRenderhq() == other.hasRenderhq());
      if (hasRenderhq()) {
        result = result && (getRenderhq()
            == other.getRenderhq());
      }
      result = result && (hasCharset() == other.hasCharset());
      if (hasCharset()) {
        result = result && (getCharset()
            == other.getCharset());
      }
      result = result && (hasAntialias() == other.hasAntialias());
      if (hasAntialias()) {
        result = result && (getAntialias()
            == other.getAntialias());
      }
      result = result && (hasIncludeTtf() == other.hasIncludeTtf());
      if (hasIncludeTtf()) {
        result = result && (getIncludeTtf()
            == other.getIncludeTtf());
      }
      result = result && (hasTtfFile() == other.hasTtfFile());
      if (hasTtfFile()) {
        result = result && getTtfFile()
            .equals(other.getTtfFile());
      }
      result = result && (hasTextureGroup() == other.hasTextureGroup());
      if (hasTextureGroup()) {
        result = result && (getTextureGroup()
            == other.getTextureGroup());
      }
      result = result && (hasImage() == other.hasImage());
      if (hasImage()) {
        result = result && getImage()
            .equals(other.getImage());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasFontName()) {
        hash = (37 * hash) + FONT_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getFontName().hashCode();
      }
      if (hasSize()) {
        hash = (37 * hash) + SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSize();
      }
      if (hasBold()) {
        hash = (37 * hash) + BOLD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBold());
      }
      if (hasItalic()) {
        hash = (37 * hash) + ITALIC_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getItalic());
      }
      if (getRangesCount() > 0) {
        hash = (37 * hash) + RANGES_FIELD_NUMBER;
        hash = (53 * hash) + getRangesList().hashCode();
      }
      if (getGlyphsCount() > 0) {
        hash = (37 * hash) + GLYPHS_FIELD_NUMBER;
        hash = (53 * hash) + getGlyphsList().hashCode();
      }
      if (hasRenderhq()) {
        hash = (37 * hash) + RENDERHQ_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getRenderhq());
      }
      if (hasCharset()) {
        hash = (37 * hash) + CHARSET_FIELD_NUMBER;
        hash = (53 * hash) + getCharset();
      }
      if (hasAntialias()) {
        hash = (37 * hash) + ANTIALIAS_FIELD_NUMBER;
        hash = (53 * hash) + getAntialias();
      }
      if (hasIncludeTtf()) {
        hash = (37 * hash) + INCLUDE_TTF_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIncludeTtf());
      }
      if (hasTtfFile()) {
        hash = (37 * hash) + TTF_FILE_FIELD_NUMBER;
        hash = (53 * hash) + getTtfFile().hashCode();
      }
      if (hasTextureGroup()) {
        hash = (37 * hash) + TEXTURE_GROUP_FIELD_NUMBER;
        hash = (53 * hash) + getTextureGroup();
      }
      if (hasImage()) {
        hash = (37 * hash) + IMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getImage().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static buffers.resources.FontOuterClass.Font parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static buffers.resources.FontOuterClass.Font parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static buffers.resources.FontOuterClass.Font parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static buffers.resources.FontOuterClass.Font parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static buffers.resources.FontOuterClass.Font parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static buffers.resources.FontOuterClass.Font parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static buffers.resources.FontOuterClass.Font parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static buffers.resources.FontOuterClass.Font parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static buffers.resources.FontOuterClass.Font parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static buffers.resources.FontOuterClass.Font parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static buffers.resources.FontOuterClass.Font parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static buffers.resources.FontOuterClass.Font parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(buffers.resources.FontOuterClass.Font prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code buffers.resources.Font}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:buffers.resources.Font)
        buffers.resources.FontOuterClass.FontOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                buffers.resources.FontOuterClass.Font.class, buffers.resources.FontOuterClass.Font.Builder.class);
      }

      // Construct using buffers.resources.FontOuterClass.Font.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRangesFieldBuilder();
          getGlyphsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fontName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        bold_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        italic_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (rangesBuilder_ == null) {
          ranges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          rangesBuilder_.clear();
        }
        if (glyphsBuilder_ == null) {
          glyphs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          glyphsBuilder_.clear();
        }
        renderhq_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        charset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        antialias_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        includeTtf_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        ttfFile_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        textureGroup_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        image_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return buffers.resources.FontOuterClass.internal_static_buffers_resources_Font_descriptor;
      }

      public buffers.resources.FontOuterClass.Font getDefaultInstanceForType() {
        return buffers.resources.FontOuterClass.Font.getDefaultInstance();
      }

      public buffers.resources.FontOuterClass.Font build() {
        buffers.resources.FontOuterClass.Font result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public buffers.resources.FontOuterClass.Font buildPartial() {
        buffers.resources.FontOuterClass.Font result = new buffers.resources.FontOuterClass.Font(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fontName_ = fontName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.bold_ = bold_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.italic_ = italic_;
        if (rangesBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            ranges_ = java.util.Collections.unmodifiableList(ranges_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.ranges_ = ranges_;
        } else {
          result.ranges_ = rangesBuilder_.build();
        }
        if (glyphsBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            glyphs_ = java.util.Collections.unmodifiableList(glyphs_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.glyphs_ = glyphs_;
        } else {
          result.glyphs_ = glyphsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.renderhq_ = renderhq_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.charset_ = charset_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.antialias_ = antialias_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.includeTtf_ = includeTtf_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.ttfFile_ = ttfFile_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.textureGroup_ = textureGroup_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.image_ = image_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof buffers.resources.FontOuterClass.Font) {
          return mergeFrom((buffers.resources.FontOuterClass.Font)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(buffers.resources.FontOuterClass.Font other) {
        if (other == buffers.resources.FontOuterClass.Font.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasFontName()) {
          bitField0_ |= 0x00000004;
          fontName_ = other.fontName_;
          onChanged();
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasBold()) {
          setBold(other.getBold());
        }
        if (other.hasItalic()) {
          setItalic(other.getItalic());
        }
        if (rangesBuilder_ == null) {
          if (!other.ranges_.isEmpty()) {
            if (ranges_.isEmpty()) {
              ranges_ = other.ranges_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureRangesIsMutable();
              ranges_.addAll(other.ranges_);
            }
            onChanged();
          }
        } else {
          if (!other.ranges_.isEmpty()) {
            if (rangesBuilder_.isEmpty()) {
              rangesBuilder_.dispose();
              rangesBuilder_ = null;
              ranges_ = other.ranges_;
              bitField0_ = (bitField0_ & ~0x00000040);
              rangesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRangesFieldBuilder() : null;
            } else {
              rangesBuilder_.addAllMessages(other.ranges_);
            }
          }
        }
        if (glyphsBuilder_ == null) {
          if (!other.glyphs_.isEmpty()) {
            if (glyphs_.isEmpty()) {
              glyphs_ = other.glyphs_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureGlyphsIsMutable();
              glyphs_.addAll(other.glyphs_);
            }
            onChanged();
          }
        } else {
          if (!other.glyphs_.isEmpty()) {
            if (glyphsBuilder_.isEmpty()) {
              glyphsBuilder_.dispose();
              glyphsBuilder_ = null;
              glyphs_ = other.glyphs_;
              bitField0_ = (bitField0_ & ~0x00000080);
              glyphsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGlyphsFieldBuilder() : null;
            } else {
              glyphsBuilder_.addAllMessages(other.glyphs_);
            }
          }
        }
        if (other.hasRenderhq()) {
          setRenderhq(other.getRenderhq());
        }
        if (other.hasCharset()) {
          setCharset(other.getCharset());
        }
        if (other.hasAntialias()) {
          setAntialias(other.getAntialias());
        }
        if (other.hasIncludeTtf()) {
          setIncludeTtf(other.getIncludeTtf());
        }
        if (other.hasTtfFile()) {
          bitField0_ |= 0x00001000;
          ttfFile_ = other.ttfFile_;
          onChanged();
        }
        if (other.hasTextureGroup()) {
          setTextureGroup(other.getTextureGroup());
        }
        if (other.hasImage()) {
          bitField0_ |= 0x00004000;
          image_ = other.image_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        buffers.resources.FontOuterClass.Font parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (buffers.resources.FontOuterClass.Font) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private int id_ ;
      /**
       * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 2 [(.buffers.gmx) = "GMX_DEPRECATED"];</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object fontName_ = "";
      /**
       * <code>optional string font_name = 3 [(.buffers.gmx) = "name"];</code>
       */
      public boolean hasFontName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string font_name = 3 [(.buffers.gmx) = "name"];</code>
       */
      public java.lang.String getFontName() {
        java.lang.Object ref = fontName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fontName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string font_name = 3 [(.buffers.gmx) = "name"];</code>
       */
      public com.google.protobuf.ByteString
          getFontNameBytes() {
        java.lang.Object ref = fontName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fontName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string font_name = 3 [(.buffers.gmx) = "name"];</code>
       */
      public Builder setFontName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fontName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string font_name = 3 [(.buffers.gmx) = "name"];</code>
       */
      public Builder clearFontName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fontName_ = getDefaultInstance().getFontName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string font_name = 3 [(.buffers.gmx) = "name"];</code>
       */
      public Builder setFontNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        fontName_ = value;
        onChanged();
        return this;
      }

      private int size_ ;
      /**
       * <code>optional int32 size = 4;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 size = 4;</code>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>optional int32 size = 4;</code>
       */
      public Builder setSize(int value) {
        bitField0_ |= 0x00000008;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 size = 4;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        size_ = 0;
        onChanged();
        return this;
      }

      private boolean bold_ ;
      /**
       * <code>optional bool bold = 5;</code>
       */
      public boolean hasBold() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool bold = 5;</code>
       */
      public boolean getBold() {
        return bold_;
      }
      /**
       * <code>optional bool bold = 5;</code>
       */
      public Builder setBold(boolean value) {
        bitField0_ |= 0x00000010;
        bold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bold = 5;</code>
       */
      public Builder clearBold() {
        bitField0_ = (bitField0_ & ~0x00000010);
        bold_ = false;
        onChanged();
        return this;
      }

      private boolean italic_ ;
      /**
       * <code>optional bool italic = 6;</code>
       */
      public boolean hasItalic() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool italic = 6;</code>
       */
      public boolean getItalic() {
        return italic_;
      }
      /**
       * <code>optional bool italic = 6;</code>
       */
      public Builder setItalic(boolean value) {
        bitField0_ |= 0x00000020;
        italic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool italic = 6;</code>
       */
      public Builder clearItalic() {
        bitField0_ = (bitField0_ & ~0x00000020);
        italic_ = false;
        onChanged();
        return this;
      }

      private java.util.List<buffers.resources.FontOuterClass.Font.Range> ranges_ =
        java.util.Collections.emptyList();
      private void ensureRangesIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          ranges_ = new java.util.ArrayList<buffers.resources.FontOuterClass.Font.Range>(ranges_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          buffers.resources.FontOuterClass.Font.Range, buffers.resources.FontOuterClass.Font.Range.Builder, buffers.resources.FontOuterClass.Font.RangeOrBuilder> rangesBuilder_;

      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public java.util.List<buffers.resources.FontOuterClass.Font.Range> getRangesList() {
        if (rangesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(ranges_);
        } else {
          return rangesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public int getRangesCount() {
        if (rangesBuilder_ == null) {
          return ranges_.size();
        } else {
          return rangesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public buffers.resources.FontOuterClass.Font.Range getRanges(int index) {
        if (rangesBuilder_ == null) {
          return ranges_.get(index);
        } else {
          return rangesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public Builder setRanges(
          int index, buffers.resources.FontOuterClass.Font.Range value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.set(index, value);
          onChanged();
        } else {
          rangesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public Builder setRanges(
          int index, buffers.resources.FontOuterClass.Font.Range.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.set(index, builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public Builder addRanges(buffers.resources.FontOuterClass.Font.Range value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.add(value);
          onChanged();
        } else {
          rangesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public Builder addRanges(
          int index, buffers.resources.FontOuterClass.Font.Range value) {
        if (rangesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRangesIsMutable();
          ranges_.add(index, value);
          onChanged();
        } else {
          rangesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public Builder addRanges(
          buffers.resources.FontOuterClass.Font.Range.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.add(builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public Builder addRanges(
          int index, buffers.resources.FontOuterClass.Font.Range.Builder builderForValue) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.add(index, builderForValue.build());
          onChanged();
        } else {
          rangesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public Builder addAllRanges(
          java.lang.Iterable<? extends buffers.resources.FontOuterClass.Font.Range> values) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ranges_);
          onChanged();
        } else {
          rangesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public Builder clearRanges() {
        if (rangesBuilder_ == null) {
          ranges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          rangesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public Builder removeRanges(int index) {
        if (rangesBuilder_ == null) {
          ensureRangesIsMutable();
          ranges_.remove(index);
          onChanged();
        } else {
          rangesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public buffers.resources.FontOuterClass.Font.Range.Builder getRangesBuilder(
          int index) {
        return getRangesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public buffers.resources.FontOuterClass.Font.RangeOrBuilder getRangesOrBuilder(
          int index) {
        if (rangesBuilder_ == null) {
          return ranges_.get(index);  } else {
          return rangesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public java.util.List<? extends buffers.resources.FontOuterClass.Font.RangeOrBuilder> 
           getRangesOrBuilderList() {
        if (rangesBuilder_ != null) {
          return rangesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(ranges_);
        }
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public buffers.resources.FontOuterClass.Font.Range.Builder addRangesBuilder() {
        return getRangesFieldBuilder().addBuilder(
            buffers.resources.FontOuterClass.Font.Range.getDefaultInstance());
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public buffers.resources.FontOuterClass.Font.Range.Builder addRangesBuilder(
          int index) {
        return getRangesFieldBuilder().addBuilder(
            index, buffers.resources.FontOuterClass.Font.Range.getDefaultInstance());
      }
      /**
       * <code>repeated .buffers.resources.Font.Range ranges = 7 [(.buffers.gmx) = "ranges/range0"];</code>
       */
      public java.util.List<buffers.resources.FontOuterClass.Font.Range.Builder> 
           getRangesBuilderList() {
        return getRangesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          buffers.resources.FontOuterClass.Font.Range, buffers.resources.FontOuterClass.Font.Range.Builder, buffers.resources.FontOuterClass.Font.RangeOrBuilder> 
          getRangesFieldBuilder() {
        if (rangesBuilder_ == null) {
          rangesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              buffers.resources.FontOuterClass.Font.Range, buffers.resources.FontOuterClass.Font.Range.Builder, buffers.resources.FontOuterClass.Font.RangeOrBuilder>(
                  ranges_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          ranges_ = null;
        }
        return rangesBuilder_;
      }

      private java.util.List<buffers.resources.FontOuterClass.Font.Glyph> glyphs_ =
        java.util.Collections.emptyList();
      private void ensureGlyphsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          glyphs_ = new java.util.ArrayList<buffers.resources.FontOuterClass.Font.Glyph>(glyphs_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          buffers.resources.FontOuterClass.Font.Glyph, buffers.resources.FontOuterClass.Font.Glyph.Builder, buffers.resources.FontOuterClass.Font.GlyphOrBuilder> glyphsBuilder_;

      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public java.util.List<buffers.resources.FontOuterClass.Font.Glyph> getGlyphsList() {
        if (glyphsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(glyphs_);
        } else {
          return glyphsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public int getGlyphsCount() {
        if (glyphsBuilder_ == null) {
          return glyphs_.size();
        } else {
          return glyphsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public buffers.resources.FontOuterClass.Font.Glyph getGlyphs(int index) {
        if (glyphsBuilder_ == null) {
          return glyphs_.get(index);
        } else {
          return glyphsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public Builder setGlyphs(
          int index, buffers.resources.FontOuterClass.Font.Glyph value) {
        if (glyphsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGlyphsIsMutable();
          glyphs_.set(index, value);
          onChanged();
        } else {
          glyphsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public Builder setGlyphs(
          int index, buffers.resources.FontOuterClass.Font.Glyph.Builder builderForValue) {
        if (glyphsBuilder_ == null) {
          ensureGlyphsIsMutable();
          glyphs_.set(index, builderForValue.build());
          onChanged();
        } else {
          glyphsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public Builder addGlyphs(buffers.resources.FontOuterClass.Font.Glyph value) {
        if (glyphsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGlyphsIsMutable();
          glyphs_.add(value);
          onChanged();
        } else {
          glyphsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public Builder addGlyphs(
          int index, buffers.resources.FontOuterClass.Font.Glyph value) {
        if (glyphsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGlyphsIsMutable();
          glyphs_.add(index, value);
          onChanged();
        } else {
          glyphsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public Builder addGlyphs(
          buffers.resources.FontOuterClass.Font.Glyph.Builder builderForValue) {
        if (glyphsBuilder_ == null) {
          ensureGlyphsIsMutable();
          glyphs_.add(builderForValue.build());
          onChanged();
        } else {
          glyphsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public Builder addGlyphs(
          int index, buffers.resources.FontOuterClass.Font.Glyph.Builder builderForValue) {
        if (glyphsBuilder_ == null) {
          ensureGlyphsIsMutable();
          glyphs_.add(index, builderForValue.build());
          onChanged();
        } else {
          glyphsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public Builder addAllGlyphs(
          java.lang.Iterable<? extends buffers.resources.FontOuterClass.Font.Glyph> values) {
        if (glyphsBuilder_ == null) {
          ensureGlyphsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, glyphs_);
          onChanged();
        } else {
          glyphsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public Builder clearGlyphs() {
        if (glyphsBuilder_ == null) {
          glyphs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          glyphsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public Builder removeGlyphs(int index) {
        if (glyphsBuilder_ == null) {
          ensureGlyphsIsMutable();
          glyphs_.remove(index);
          onChanged();
        } else {
          glyphsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public buffers.resources.FontOuterClass.Font.Glyph.Builder getGlyphsBuilder(
          int index) {
        return getGlyphsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public buffers.resources.FontOuterClass.Font.GlyphOrBuilder getGlyphsOrBuilder(
          int index) {
        if (glyphsBuilder_ == null) {
          return glyphs_.get(index);  } else {
          return glyphsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public java.util.List<? extends buffers.resources.FontOuterClass.Font.GlyphOrBuilder> 
           getGlyphsOrBuilderList() {
        if (glyphsBuilder_ != null) {
          return glyphsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(glyphs_);
        }
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public buffers.resources.FontOuterClass.Font.Glyph.Builder addGlyphsBuilder() {
        return getGlyphsFieldBuilder().addBuilder(
            buffers.resources.FontOuterClass.Font.Glyph.getDefaultInstance());
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public buffers.resources.FontOuterClass.Font.Glyph.Builder addGlyphsBuilder(
          int index) {
        return getGlyphsFieldBuilder().addBuilder(
            index, buffers.resources.FontOuterClass.Font.Glyph.getDefaultInstance());
      }
      /**
       * <code>repeated .buffers.resources.Font.Glyph glyphs = 8 [(.buffers.gmx) = "glyphs/glyph"];</code>
       */
      public java.util.List<buffers.resources.FontOuterClass.Font.Glyph.Builder> 
           getGlyphsBuilderList() {
        return getGlyphsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          buffers.resources.FontOuterClass.Font.Glyph, buffers.resources.FontOuterClass.Font.Glyph.Builder, buffers.resources.FontOuterClass.Font.GlyphOrBuilder> 
          getGlyphsFieldBuilder() {
        if (glyphsBuilder_ == null) {
          glyphsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              buffers.resources.FontOuterClass.Font.Glyph, buffers.resources.FontOuterClass.Font.Glyph.Builder, buffers.resources.FontOuterClass.Font.GlyphOrBuilder>(
                  glyphs_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          glyphs_ = null;
        }
        return glyphsBuilder_;
      }

      private boolean renderhq_ ;
      /**
       * <code>optional bool renderhq = 10;</code>
       */
      public boolean hasRenderhq() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool renderhq = 10;</code>
       */
      public boolean getRenderhq() {
        return renderhq_;
      }
      /**
       * <code>optional bool renderhq = 10;</code>
       */
      public Builder setRenderhq(boolean value) {
        bitField0_ |= 0x00000100;
        renderhq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool renderhq = 10;</code>
       */
      public Builder clearRenderhq() {
        bitField0_ = (bitField0_ & ~0x00000100);
        renderhq_ = false;
        onChanged();
        return this;
      }

      private int charset_ ;
      /**
       * <code>optional uint32 charset = 11;</code>
       */
      public boolean hasCharset() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 charset = 11;</code>
       */
      public int getCharset() {
        return charset_;
      }
      /**
       * <code>optional uint32 charset = 11;</code>
       */
      public Builder setCharset(int value) {
        bitField0_ |= 0x00000200;
        charset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 charset = 11;</code>
       */
      public Builder clearCharset() {
        bitField0_ = (bitField0_ & ~0x00000200);
        charset_ = 0;
        onChanged();
        return this;
      }

      private int antialias_ ;
      /**
       * <code>optional uint32 antialias = 12 [(.buffers.gmx) = "aa"];</code>
       */
      public boolean hasAntialias() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 antialias = 12 [(.buffers.gmx) = "aa"];</code>
       */
      public int getAntialias() {
        return antialias_;
      }
      /**
       * <code>optional uint32 antialias = 12 [(.buffers.gmx) = "aa"];</code>
       */
      public Builder setAntialias(int value) {
        bitField0_ |= 0x00000400;
        antialias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 antialias = 12 [(.buffers.gmx) = "aa"];</code>
       */
      public Builder clearAntialias() {
        bitField0_ = (bitField0_ & ~0x00000400);
        antialias_ = 0;
        onChanged();
        return this;
      }

      private boolean includeTtf_ ;
      /**
       * <code>optional bool include_ttf = 13 [(.buffers.gmx) = "includeTTF"];</code>
       */
      public boolean hasIncludeTtf() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool include_ttf = 13 [(.buffers.gmx) = "includeTTF"];</code>
       */
      public boolean getIncludeTtf() {
        return includeTtf_;
      }
      /**
       * <code>optional bool include_ttf = 13 [(.buffers.gmx) = "includeTTF"];</code>
       */
      public Builder setIncludeTtf(boolean value) {
        bitField0_ |= 0x00000800;
        includeTtf_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool include_ttf = 13 [(.buffers.gmx) = "includeTTF"];</code>
       */
      public Builder clearIncludeTtf() {
        bitField0_ = (bitField0_ & ~0x00000800);
        includeTtf_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object ttfFile_ = "";
      /**
       * <code>optional string ttf_file = 14 [(.buffers.gmx) = "TTFName"];</code>
       */
      public boolean hasTtfFile() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string ttf_file = 14 [(.buffers.gmx) = "TTFName"];</code>
       */
      public java.lang.String getTtfFile() {
        java.lang.Object ref = ttfFile_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ttfFile_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ttf_file = 14 [(.buffers.gmx) = "TTFName"];</code>
       */
      public com.google.protobuf.ByteString
          getTtfFileBytes() {
        java.lang.Object ref = ttfFile_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ttfFile_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ttf_file = 14 [(.buffers.gmx) = "TTFName"];</code>
       */
      public Builder setTtfFile(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        ttfFile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ttf_file = 14 [(.buffers.gmx) = "TTFName"];</code>
       */
      public Builder clearTtfFile() {
        bitField0_ = (bitField0_ & ~0x00001000);
        ttfFile_ = getDefaultInstance().getTtfFile();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ttf_file = 14 [(.buffers.gmx) = "TTFName"];</code>
       */
      public Builder setTtfFileBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        ttfFile_ = value;
        onChanged();
        return this;
      }

      private int textureGroup_ ;
      /**
       * <code>optional int32 texture_group = 15 [(.buffers.gmx) = "texgroups/texgroup0"];</code>
       */
      public boolean hasTextureGroup() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 texture_group = 15 [(.buffers.gmx) = "texgroups/texgroup0"];</code>
       */
      public int getTextureGroup() {
        return textureGroup_;
      }
      /**
       * <code>optional int32 texture_group = 15 [(.buffers.gmx) = "texgroups/texgroup0"];</code>
       */
      public Builder setTextureGroup(int value) {
        bitField0_ |= 0x00002000;
        textureGroup_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 texture_group = 15 [(.buffers.gmx) = "texgroups/texgroup0"];</code>
       */
      public Builder clearTextureGroup() {
        bitField0_ = (bitField0_ & ~0x00002000);
        textureGroup_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object image_ = "";
      /**
       * <code>optional string image = 16;</code>
       */
      public boolean hasImage() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional string image = 16;</code>
       */
      public java.lang.String getImage() {
        java.lang.Object ref = image_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            image_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string image = 16;</code>
       */
      public com.google.protobuf.ByteString
          getImageBytes() {
        java.lang.Object ref = image_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          image_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string image = 16;</code>
       */
      public Builder setImage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        image_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string image = 16;</code>
       */
      public Builder clearImage() {
        bitField0_ = (bitField0_ & ~0x00004000);
        image_ = getDefaultInstance().getImage();
        onChanged();
        return this;
      }
      /**
       * <code>optional string image = 16;</code>
       */
      public Builder setImageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        image_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:buffers.resources.Font)
    }

    // @@protoc_insertion_point(class_scope:buffers.resources.Font)
    private static final buffers.resources.FontOuterClass.Font DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new buffers.resources.FontOuterClass.Font();
    }

    public static buffers.resources.FontOuterClass.Font getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Font>
        PARSER = new com.google.protobuf.AbstractParser<Font>() {
      public Font parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Font(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Font> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Font> getParserForType() {
      return PARSER;
    }

    public buffers.resources.FontOuterClass.Font getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buffers_resources_Font_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buffers_resources_Font_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buffers_resources_Font_Glyph_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buffers_resources_Font_Glyph_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_buffers_resources_Font_Range_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_buffers_resources_Font_Range_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024resources/Font.proto\022\021buffers.resource" +
      "s\032\roptions.proto\"\204\005\n\004Font\022\014\n\004name\030\001 \001(\t\022" +
      "\036\n\002id\030\002 \001(\005B\022\202\265\030\016GMX_DEPRECATED\022\033\n\tfont_" +
      "name\030\003 \001(\tB\010\202\265\030\004name\022\014\n\004size\030\004 \001(\005\022\014\n\004bo" +
      "ld\030\005 \001(\010\022\016\n\006italic\030\006 \001(\010\022@\n\006ranges\030\007 \003(\013" +
      "2\035.buffers.resources.Font.RangeB\021\202\265\030\rran" +
      "ges/range0\022?\n\006glyphs\030\010 \003(\0132\035.buffers.res" +
      "ources.Font.GlyphB\020\202\265\030\014glyphs/glyph\022\020\n\010r" +
      "enderhq\030\n \001(\010\022\017\n\007charset\030\013 \001(\r\022\031\n\tantial" +
      "ias\030\014 \001(\rB\006\202\265\030\002aa\022#\n\013include_ttf\030\r \001(\010B\016" +
      "\202\265\030\nincludeTTF\022\035\n\010ttf_file\030\016 \001(\tB\013\202\265\030\007TT" +
      "FName\022.\n\rtexture_group\030\017 \001(\005B\027\202\265\030\023texgro" +
      "ups/texgroup0\022\r\n\005image\030\020 \001(\t\032|\n\005Glyph\022\021\n" +
      "\tcharacter\030\001 \001(\r\022\t\n\001x\030\002 \001(\r\022\t\n\001y\030\003 \001(\r\022\024" +
      "\n\005width\030\004 \001(\rB\005\202\265\030\001w\022\025\n\006height\030\005 \001(\rB\005\202\265" +
      "\030\001h\022\r\n\005shift\030\006 \001(\005\022\016\n\006offset\030\007 \001(\005\032C\n\005Ra" +
      "nge\022\034\n\003min\030\001 \001(\005B\017\202\265\030\013GMX_SPLIT/0\022\034\n\003max" +
      "\030\002 \001(\005B\017\202\265\030\013GMX_SPLIT/1"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          buffers.Options.getDescriptor(),
        }, assigner);
    internal_static_buffers_resources_Font_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_buffers_resources_Font_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buffers_resources_Font_descriptor,
        new java.lang.String[] { "Name", "Id", "FontName", "Size", "Bold", "Italic", "Ranges", "Glyphs", "Renderhq", "Charset", "Antialias", "IncludeTtf", "TtfFile", "TextureGroup", "Image", });
    internal_static_buffers_resources_Font_Glyph_descriptor =
      internal_static_buffers_resources_Font_descriptor.getNestedTypes().get(0);
    internal_static_buffers_resources_Font_Glyph_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buffers_resources_Font_Glyph_descriptor,
        new java.lang.String[] { "Character", "X", "Y", "Width", "Height", "Shift", "Offset", });
    internal_static_buffers_resources_Font_Range_descriptor =
      internal_static_buffers_resources_Font_descriptor.getNestedTypes().get(1);
    internal_static_buffers_resources_Font_Range_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_buffers_resources_Font_Range_descriptor,
        new java.lang.String[] { "Min", "Max", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(buffers.Options.gmx);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    buffers.Options.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
